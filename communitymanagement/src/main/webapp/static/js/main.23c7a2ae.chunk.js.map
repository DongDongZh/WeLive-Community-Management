{"version":3,"sources":["logo.svg","components/Navigation.js","components/Footer.js","components/Blank.js","components/DropDown.js","components/AJAX.js","pages/TicketingManager.js","pages/TicketingStaff.js","components/Button.js","pages/TicketingResident.js","components/ResidentSignUp.js","components/ManagerSignUp.js","components/StaffSignUp.js","components/RequestInterceptor.js","components/RegistrationForm.js","components/AccountAxios.js","pages/Registration.js","components/WorkOrder.js","components/News.js","components/ChatDashboard.js","components/StatusTag.js","components/PriorityTag.js","pages/DashboardResident.js","pages/Calender.js","components/LoginForm.js","pages/Login.js","pages/DashboardManager.js","pages/DashboardStaff.js","pages/TicketingDetail.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","href","this","props","dashboard","ticket","chat","logout","Component","Footer","Blank","sendData","event","parentCallback","target","value","state","text","placeholder","DropDown","console","log","elements","items","entries","index","push","key","description","onChange","selected","disabled","hidden","ajax","method","url","data","successCallback","errorCallback","xhr","XMLHttpRequest","open","onload","status","responseText","onerror","error","send","setRequestHeader","TicketingManager","loadIssueCategory","Ajax","res","JSON","parse","setState","possible_issue_categories","ReloadTickets","dsource","allTicketsTag","map","cdiv","i","all_assignees","allTicketsContent","recommend_staff","assigneeTag_1","direction","iid","AssignmentCallBack","onClick","assignTickets","shape","assigneeTag","category","assignee","ticket_id","TicketIdStore","type","unit","unit_number","subject","created","submitted_date","issue","priority","datasource","tid","sessionStorage","setItem","HomeBlankCallBack","childData","childProps","FnameBlankCallBack","firstName","LnameBlankCallBack","lastName","contactDropDownCallBack","contact_method","locationDropDownCallBack","location","categoryDropDownCallBack","pos_locs","possible_locs","priortyDropDownCallBack","priorty","subjectBlankCallBack","DescriptionCallBack","SubmitTickets","today","Date","time","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","ticketData","Math","random","toString","substring","ticketSubmitMessage","refershTickets","length","ttags","priortyidx","allticketsContent","existingAssignments","assignment","tiid","asm","obj","find","o","Object","keys","findIndex","columns","title","dataIndex","render","sorter","a","b","sortDirections","class","Container","fluid","Row","Col","xs","scroll","y","dataSource","TicketingStaff","reloadTickets","acceptDeclineTagContent","acceptDeclineTagContent_1","acceptTicket","declineTicket","acceptDeclineTagContent_2","date","dateString","pushFixDate","confirmTickets","BacktoAcceptDecline","acceptDeclineTagContent_3","fix_date","acceptDecline","username","existing_fix_date","existingTicketContent","Button","content","TicketingResident","TextArea","Input","review","rows","ResidentSignUp","param","moment","format","Item","label","name","rules","required","message","prefix","FieldNumberOutlined","style","width","ManagerSignUp","StaffSignUp","handleChange","Option","Select","labelInValue","defaultValue","service","axios","create","baseURL","timeout","interceptors","request","use","config","Promise","reject","response","RegisterForm","onFinish","values","personType","user_type","then","catch","initialValues","remember","UserOutlined","MailOutlined","hasFeedback","LockOutlined","dependencies","getFieldValue","validator","rule","resolve","PhoneOutlined","htmlType","block","RegisterPage","URLSearchParams","window","search","get","RegistrationForm","getUserType","WorkOrder","id","News","ChatDashboard","sender","StatusTag","color","PriorityTag","Dashboard","news","messages","fetch","json","alert","newsDivs","messageDivs","existingOrder","completedOrder","unitNumber","fixDate","Calender","getListData","listData","dateCellRender","item","getMonthData","month","monthCellRender","num","Login","e","initialvalues","LoginPage","formType","LoginForm","DashboardManager","DashboardStaff","ticketDivs","completed","TicketingDetail","loadTicketContent","getItem","ticketDetail","ticket_detail","ticketComments","comments","reloadTicketDetail","listDataTemp","avatar","size","backgroundColor","user_name","toUpperCase","body","postComment","put","params","comment","addComment","currentComment","itemLayout","pagination","page","pageSize","renderItem","Meta","ticket_status","Home","App","basename","exact","path","DashboardResident","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23c7a2ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass Navigation extends Component {\n    render() {\n        return (\n            <div className = \"nav\">\n                <a href = {this.props.dashboard} className = \"left-nav\">Dashboard</a>\n                <a href = {this.props.ticket} className = \"left-nav\">Ticket</a>\n                <a href = {this.props.chat} className = \"left-nav\">Chat</a>\n                <a href = {this.props.logout} className = \"right-nav\">Logout</a>\n            </div>\n        );\n    }\n}\n\nexport default Navigation;","import React, {Component} from 'react';\n\nclass Footer extends Component {\n    render() {\n        return(\n            <div className = \"footer\">\n                &copy; community management app\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Input } from 'antd';\n\nclass Blank extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            value: ''\n        };\n    \n    }\n\n    sendData = (event) => {\n        this.props.parentCallback(event.target.value,this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"blank\">\n                <p>{this.props.text}</p>\n                <Input placeholder={this.props.text} />\n            </div>\n        );\n    }\n}\n\nexport default Blank;","import React, { Component } from 'react';\n\nclass DropDown extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            value: ''\n        };\n    \n    }\n\n    //handleChange(event) {\n    //    this.setState({value: event.target.value});\n    //}\n\n    sendData = (event) => {\n        console.log(event.target.value);\n        this.props.parentCallback(event.target.value,this.props);\n    }\n\n    render() {\n        const elements = this.props.elements;\n\n        const items = [];\n\n        for (const [index, value] of elements.entries()) {\n            items.push(<option key={index}>{value}</option>)\n        }\n\n        return (\n            <div className=\"DropDown\">\n                <p>{this.props.description}</p>\n                <select className=\"DropDownSelect\" onChange={this.sendData}>\n                    <option value=\"\" selected disabled hidden>Choose one</option>\n                    {items}\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default DropDown;","export default function ajax(method, url, data, successCallback, errorCallback) {\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(method, url, true);\n\n    xhr.onload = function() {\n      if (xhr.status === 200) {\n        successCallback(xhr.responseText);\n      } else {\n        errorCallback();\n      }\n    };\n\n    xhr.onerror = function() {\n      console.error(\"The request couldn't be completed.\");\n      errorCallback();\n    };\n\n    if (data === null) {\n      xhr.send();\n    } else {\n      xhr.setRequestHeader(\"Content-Type\",\n        \"application/json;charset=utf-8\");\n      xhr.send(data);\n    }\n  }","import React, {Component} from 'react';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nimport {Table} from 'antd';\nimport {Button} from 'antd';\nimport {Space} from 'antd';\nimport Blank from '../components/Blank';\nimport DropDown from \"../components/DropDown\";\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Ajax from '../components/AJAX'\n\n\nclass TicketingManager extends Component {\n    constructor(){\n        super();\n        this.state = {\n            allTicketsTag: ['tk1','tk2'],    // set initial state with one div\n            allTicketsContent: [{\n                \"ticket_id\":\"0001233\",\n                \"unit_number\": '711',\n                \"subject\": \"water leak\",\n                \"submitted_date\": \"2020-09-18T14:48:00\",\n                \"issue\": \"water\",\n                \"recommend_staff\": []\n            },\n            {\n                \"ticket_id\":\"0032134\",\n                \"unit_number\": '711',\n                \"subject\": \"bear sleeping on sofa\",\n                \"submitted_date\": \"2020-09-11T14:48:00\",\n                \"issue\": \"misc\",\n                \"recommend_staff\": []                \n            },\n            ],\n           ticketSubmitMessage:\"\",\n           unit:'',\n           lastName:'',\n           firstName:'',\n           contact_method:'',\n           location:'',\n           category:'',\n           priorty:'',\n           subject:'',\n           description:'',\n           assignment:[],\n           datasource:[],\n           recommend_staff:[\"engineer1\",\"engineer2\"],\n           assignee:[\"engineer1\"],\n           possible_issue_categories:{\n             \"kitchen\": [\"sink\", \"dishwasher\"], \n             \"bathroom\": [\"sink\", \"furniture\",\"floor\"],\n             \"toilet\":[\"sink\",\"bathtub\",\"clog\"],\n             \"yard maintaince\": ['pool','yard'],\n             \"water\":[\"pipe explode\",\"pipe clog\",\"pipe freeze\"],\n             \"pest control\":[\"kitchen\",\"bedroom\",\"toliet\",\"living room\",\"patio\",\"storage\",\"basement\"],\n             \"locksmith\":[],\n             \"trash\":[],\n             \"misc\":[]\n            },\n            possible_locs:[]\n          // possible_loc:['kitchen','water','flooring','painting','windows/doors','yard','pest control','locksmith','trash','yard/pool','misc'],\n         }\n    }\n    \n    componentDidMount(){\n        this.refershTickets();\n        this.loadIssueCategory();\n    }\n\n    loadIssueCategory=()=>{\n      Ajax('GET', \"/communitymanagement/tickets/ticket-issue-categories\", [],\n          // successful callback\n          function(res) {\n            let items = JSON.parse(res);\n            this.setState({possible_issue_categories:items})\n            console.log(\"good\");\n          },\n          // failed callback\n          function() {\n            console.log('fail');\n          }\n        );\n    }\n\n    // refresh page function \n    ReloadTickets = ()=>{\n      \n      let dsource=[];\n\n      this.state.allTicketsTag.map((cdiv, i) => {\n        \n        let all_assignees=this.state.allTicketsContent[i].recommend_staff;\n        let assigneeTag_1=\n        <div>\n          <Space direction=\"vertical\">\n            <DropDown iid={i} parentCallback = {this.AssignmentCallBack} elements={all_assignees}/>\n            <Button iid={i} onClick={(event)=>this.assignTickets(event,i)} shape=\"round\">Confirm</Button> \n          </Space>\n        </div>;  //(event)=>this.assignTickets(event,i): add a parameter i to callback\n  \n        //let assigneeTag_2=<div><Button iid={i} onClick={(event)=>this.cancelAssignment(event,i)} danger>Cancel Assignment</Button></div>;\n\n        //1. trim assignees by category (unfinished)\n        let cCategory=this.state.allTicketsContent[i].category;\n\n        //2.check if assignee exists for current ticket\n        let assigneeTag=[];\n        if (this.state.allTicketsContent[i].assignee){\n          console.log(this.state.allTicketsContent[i].assignee);\n          \n          let assigneeTag_2=<div>Assigned: {this.state.allTicketsContent[i].assignee} </div>;\n          \n          assigneeTag=assigneeTag_2;\n        }else{\n          assigneeTag=assigneeTag_1;\n        }\n\n        dsource.push({\n            key: i,\n            ticket_id: <Button href='/communitymanagement/TicketingDetail' onClick={this.TicketIdStore(this.state.allTicketsContent[i].ticket_id)} type=\"link\">{this.state.allTicketsContent[i].ticket_id}</Button>, \n            unit: this.state.allTicketsContent[i].unit_number, \n            subject: this.state.allTicketsContent[i].subject, \n            created: this.state.allTicketsContent[i].submitted_date, \n            category: this.state.allTicketsContent[i].issue, \n            priority: this.state.allTicketsContent[i].priority,\n            assignee: assigneeTag,\n        })\n      });\n      this.setState({datasource:dsource}); // it is suggested that try not to directly change state var as next setState may discard the change, use setsTATE instead\n      \n    }\n\n    TicketIdStore = (tid) =>{\n      sessionStorage.setItem('inquiredTicketID', 'tid');\n    }\n\n    // if need props, use this.props to access\n    HomeBlankCallBack = (childData,childProps) => {\n      this.setState({\n        unit: childData,\n      });\n      //console.log(childData);\n      \n    }\n    \n    FnameBlankCallBack = (childData,childProps) => {\n      this.setState({\n        firstName: childData,\n      })\n      //console.log(childData);\n      //console.log(this.state.unit);\n    }\n\n    LnameBlankCallBack = (childData,childProps) => {\n      this.setState({\n        lastName: childData,\n      })\n    }\n\n    contactDropDownCallBack = (childData,childProps) => {\n      this.setState({\n        contact_method: childData,\n      })\n    }\n\n    locationDropDownCallBack = (childData,childProps) => {\n      this.setState({\n        location: childData,\n      })\n    }\n\n    categoryDropDownCallBack = (childData,childProps) => {\n      let pos_locs=this.state.possible_issue_categories[childData];\n      this.setState({\n        category: childData,\n        possible_locs: pos_locs\n      })\n    }\n\n    priortyDropDownCallBack = (childData,childProps) => {\n      this.setState({\n        priorty: childData,\n      })\n    }\n\n    subjectBlankCallBack = (childData,childProps) => {\n      this.setState({\n        subject: childData,\n      })\n    }\n\n    DescriptionCallBack = (event) => {\n      this.setState({\n        description: event.target.value,\n      })\n    }\n\n    \n\n    SubmitTickets=()=>{\n        console.log(this.state.unit);\n        let today = new Date();\n        let time = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()+\"T\"+today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        let ticketData = {\n          \"ticket_id\": Math.random().toString(12).substring(2, 9) + Math.random().toString(12).substring(2, 9),\n          //\"user_id\": sessionStorage.user_id,\n          \"user_id\": '123',\n          \"firstName\": this.state.firstName,\n          \"lastName\":  this.state.lastName,\n          \"unit\":this.state.unit,\n          \"priority\": this.state.priorty,\n          \"subject\": this.state.subject,\n          \"location\": this.state.location,\n          \"issue_category_id\": 1,\n          \"description\": this.state.description,\n          \"category\": this.state.category,\n          \"created\": time,\n          \"availability\": \"\",\n          \"assignee\": \"\",\n          \"fix_date\":\"\",\n          \"ticket_status\":\"\",\n          \"contact_method\":this.state.contact_method,\n          \"status\":\"open\"\n        };\n        console.log(ticketData);\n        //fetchAPI to create ticket\n        Ajax('POST', \"/communitymanagement/tickets/submit\", ticketData,\n          // successful callback\n          function(res) {\n            console.log(\"good\");\n          },\n          // failed callback\n          function() {\n            console.log('fail');\n          }\n        );\n        \n        this.setState({ticketSubmitMessage:\"ticket \"+ticketData.ticket_id.toString()+\" has been submitted\"})\n        \n      }\n\n    refershTickets=()=>{\n        Ajax('GET', '/communitymanagement/tickets/manager', [],\n          // successful callback\n          function(res) {\n            let items = JSON.parse(res);\n            if (!items || items.length === 0) {\n              console.log('No tickets.');\n            } else {\n              \n              let ttags = [];\n            \n                //convert priorty for sorting\n              items.map((cdiv,i)=>{\n              if(items[i].priorty===\"high\"){\n                items[i].priortyidx=3;\n              }\n              if(items[i].priorty===\"medium\"){\n                items[i].priortyidx=2;\n              }\n              if(items[i].priorty===\"low\"){\n                items[i].priortyidx=1;\n              }\n  \n              ttags.push(i);\n            })\n  \n            this.setState({allticketsContent:items});\n            this.setState({allTicketsTag:ttags});\n            this.ReloadTickets();\n            }\n          },\n          // failed callback\n          function() {\n            console.log('Cannot load tickets.');\n          }\n        );\n        \n      }\n      \n    AssignmentCallBack = (childData,childProps) => {\n      let existingAssignments=this.state.assignment;\n      \n      let tiid=childProps.iid;\n      let asm=childData;\n      let obj={};\n      obj[tiid]=asm;\n      \n      if(existingAssignments.find(o=>Object.keys(o)==tiid)){\n        existingAssignments[existingAssignments.findIndex(o=>Object.keys(o)==tiid)]=obj; // change assignment\n      }else{\n        existingAssignments.push(obj);\n      }\n      this.setState(\n        {assignment:existingAssignments}\n      )\n    }\n\n    assignTickets=(event,i)=>{\n      console.log(this.state.assignment);\n      let obj=this.state.assignment.find(o=>Object.keys(o)==i);\n      let tid=this.state.allTicketsContent[i].ticket_id;\n\n      //if directly click confirm, set the first assignee\n      if(!obj){ \n        obj={i:this.state.recommend_staff[0]};\n      }\n\n      Ajax('PUT', \"/communitymanagement/tickets/\"+tid.toString()+\"/assignees\", obj[i],\n          // successful callback\n          function(res) {\n            console.log(\"good\");\n          },\n          // failed callback\n          function() {\n            console.log('fail');\n          }\n        );\n      this.refershTickets();\n\n        // test without backend communication\n      let items=this.state.allTicketsContent;\n      items[i].assignee=obj[i];\n      this.setState({allTicketsContent:items})\n      this.ReloadTickets();\n    }\n\n    // cancelAssignemnt=(event,i)=>{\n    //   this.state.allTicketsContent[event.target.iid].assignee=\"\";\n    //   this.state.allTicketsContent[event.target.iid].status=\"open\";\n    //   Ajax('POST', \"/tickets\", this.state.allTicketsContent[event.target.iid],\n    //       // successful callback\n    //       function(res) {\n    //         console.log(\"good\");\n    //       },\n    //       // failed callback\n    //       function() {\n    //         console.log('fail');\n    //       }\n    //     );\n    //     this.refershTickets();\n    // }\n\n    render() {\n      const columns=[{\n        title: 'Ticket ID',\n        dataIndex: 'ticket_id',\n        render: (text) => <a>{text}</a>,\n      },\n      {\n        title: 'Unit',\n        dataIndex: 'unit',\n      },\n      {\n        title: 'Subject',\n        dataIndex: 'subject',\n      },\n      {\n        title: 'Submitted time',\n        dataIndex: 'created',\n        sorter: (a, b) => Date.parse(a.created) - Date.parse(b.created),\n        sortDirections: ['descend', 'ascend'],\n      },\n      {\n        title: 'Category',\n        dataIndex: 'category',\n      },\n      {\n        title: 'Priority',\n        dataIndex: 'priority',\n        sorter: (a, b) => a.priortyidx - b.priortyidx,\n        sortDirections: ['descend', 'ascend'],\n      },    \n      {\n        title: 'Assign Staff',\n        dataIndex: 'assignee',\n      },  \n    ];\n      return(\n        <div>\n            <Navigation/>\n\n            <div class=\"managerWelcome\">\n                Welcome Manager\n            </div>\n            <Container fluid>\n              <Row>\n                <Col xs={4}>\n                  <h3> Submit a Work Order </h3>\n                  <div>\n                    <Space direction=\"vertical\">\n                      <Row class='TicketSubmitManager'>  \n                        <Col>\n                            <Blank text=\"Home\" parentCallback = {this.HomeBlankCallBack}/>\n                            <Blank text=\"First Name\" parentCallback = {this.FnameBlankCallBack}/>\n                            <Blank text=\"Last Name\" parentCallback = {this.LnameBlankCallBack}/>\n                            <p>Description</p>\n                            <input text=\"Description\" className = \"description-box\" onChange={this.DescriptionCallBack}></input>\n                            \n                        </Col>                  \n                        <Col>\n                            <Blank text=\"Ticket Title\" parentCallback = {this.subjectBlankCallBack}/>\n                            <DropDown elements={['phone','email']} description=\"Contact Method\" parentCallback = {this.contactDropDownCallBack}/>\n                            \n                            <DropDown elements={Object.keys(this.state.possible_issue_categories)} description=\"Category\" parentCallback = {this.categoryDropDownCallBack} />\n                            <DropDown elements={this.state.possible_locs} description=\"Location\" parentCallback = {this.locationDropDownCallBack} />\n                            <DropDown elements={[\"high\",'medium','low']} description=\"Priority\" parentCallback = {this.priortyDropDownCallBack} />\n                        \n                        </Col>    \n                      </Row>\n                      \n                      <Button onClick={this.SubmitTickets} type=\"primary\">Submit</Button>\n                      <div>{this.state.ticketSubmitMessage}</div>\n                    </Space>\n                  </div> \n                </Col>\n                \n                <Col>\n                  <h3> Existing Work Orders </h3>\n                  <Space direction=\"vertical\">\n                    <Button>Refersh Ticket</Button>\n                    <Table scroll={{y:400}} dataSource={this.state.datasource} columns={columns} />\n                  </Space>\n                </Col>\n              </Row>\n            </Container>\n            \n            <Footer/>\n        </div>\n      );\n  }\n}\n\nexport default TicketingManager;","import React, {Component} from 'react';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nimport {Table} from 'antd';\nimport {Button} from 'antd';\nimport {Space} from 'antd';\nimport {DatePicker} from 'antd';\nimport Ajax from '../components/AJAX'\n\nclass TicketingStaff extends Component {\n    constructor(){\n        super();\n        this.state = {\n            allTicketsTag: ['tk1','tk2','tk3'],    // set initial state with one div\n            allTicketsContent: [{\n                \"ticket_id\":\"0001233\",\n                \"unit\": '711',\n                \"subject\": \"water leak\",\n                \"created\": \"2020-09-18T14:48:00\",\n                \"category\": \"water\",\n                \"priority\": \"high\",\n                \"fix_date\":\"09/09/2021\",\n                \"status\":\"in progress\"\n            },\n            {\n                \"ticket_id\":\"0032134\",\n                \"unit\": '711',\n                \"subject\": \"bear sleeping on sofa\",\n                \"created\": \"2020-09-11T14:48:00\",\n                \"category\": \"misc\",\n                \"priority\": \"medium\",  \n                \"fix_date\":\"\",\n                \"status\":\"assigned\"              \n            },\n            {\n                \"ticket_id\":\"0123435\",\n                \"unit\": '711',\n                \"subject\": \"sink clog\",\n                \"created\": \"2020-09-11T14:48:00\",\n                \"category\": \"sink\",\n                \"priority\": \"medium\",  \n                \"fix_date\":\"\",\n                \"status\":\"assigned\"                \n            }\n          ],\n          fix_date:[],\n          datasource:[]\n       }\n    }\n\n    componentDidMount(){\n      this.reloadTickets();\n    }\n\n    reloadTickets=()=>{\n            \n      let dsource=[];\n\n      this.state.allTicketsTag.map((cdiv, i) => {\n     \n        let acceptDeclineTagContent=[];\n      \n        let acceptDeclineTagContent_1=\n        <div>\n          <Button iid={i} onClick={(event)=>this.acceptTicket(event,i)}>Accept</Button>\n          <Button iid={i} onClick={(event)=>this.declineTicket(event,i)}>Decline</Button>\n        </div>;\n        \n        let acceptDeclineTagContent_2=\n        <div>\n          <Space direction=\"vertical\">\n            <DatePicker iid={i} onChange={(date, dateString) => this.pushFixDate(date, dateString, i)}>select fix date</DatePicker>\n            <div>\n              <Button iid={i} onClick={(event)=>this.confirmTickets(event,i)}>Confirm</Button>\n              <Button iid={i} onClick={(event)=>this.BacktoAcceptDecline(event,i)}>Back</Button>\n            </div>\n          </Space>\n        </div>;\n        \n        let acceptDeclineTagContent_3=<Button iid={i} type=\"primary\">Complete</Button>\n\n        console.log(this.state.allTicketsContent[i].status);\n        if(this.state.allTicketsContent[i].status===\"INPROGRESS\"){\n          if(this.state.allTicketsContent[i].fix_date){ // ticket status: in progress, fixdate provided, indicate staff is on their way\n            acceptDeclineTagContent=acceptDeclineTagContent_3;\n          }else{// ticket status: in progress, no fix date, staff is considering their fixdate\n            acceptDeclineTagContent=acceptDeclineTagContent_2;\n          }\n          \n        }else{ // ticket status: assigned, staff has not accept the ticket assigned to them\n          acceptDeclineTagContent=acceptDeclineTagContent_1;\n        }\n\n        dsource.push({\n            key: i,\n            ticket_id: <Button href=\"/communitymanagement/TicketingDetail\" onClick={this.TicketIdStore(this.state.allTicketsContent[i].ticket_id)} type=\"link\">{this.state.allTicketsContent[i].ticket_id}</Button>, \n            unit: this.state.allTicketsContent[i].unit, \n            subject: this.state.allTicketsContent[i].subject, \n            created: this.state.allTicketsContent[i].created, \n            category: this.state.allTicketsContent[i].category, \n            priority: this.state.allTicketsContent[i].priority,\n            acceptDecline: acceptDeclineTagContent\n        })\n    });\n    this.setState({datasource:dsource});\n  }\n    \n  TicketIdStore = (tid) =>{\n      sessionStorage.setItem('inquiredTicketID', 'tid');\n    }\n\n    refershTickets=()=>{\n      Ajax('GET', '/tickets/staff?'+sessionStorage.username, [],\n        // successful callback\n        function(res) {\n          let items = JSON.parse(res);\n          if (!items || items.length === 0) {\n            console.log('No tickets.');\n          } else {\n          let ttags = [];\n          \n            //convert priorty for sorting\n          items.map((cdiv,i)=>{\n            if(items[i].priorty===\"high\"){\n              items[i].priortyidx=3;\n            }\n            if(items[i].priorty===\"medium\"){\n              items[i].priortyidx=2;\n            }\n            if(items[i].priorty===\"low\"){\n              items[i].priortyidx=1;\n            }\n\n            ttags.push(i);\n          })\n\n          this.setState({allticketsContent:items});\n          this.setState({allTicketsTag:ttags});\n          this.reloadTickets();\n          }\n        },\n        // failed callback\n        function() {\n          console.log('Cannot load tickets.');\n        }\n      );\n      \n    }\n    \n    acceptTicket=(event,i)=>{\n      let dsource=this.state.allTicketsContent;\n      dsource[i].status=\"INPROGRESS\";\n\n      this.setState({allTicketsContent:dsource});\n      this.reloadTickets();\n    }\n\n    pushFixDate=(date, dateString,iid)=>{ \n      let obj={};\n      obj[iid]=dateString;\n      let existing_fix_date=this.state.fix_date;\n      existing_fix_date.push(obj);\n      this.setState({fix_date:existing_fix_date});\n    }\n\n    BacktoAcceptDecline=(event,i)=>{\n      let dsource=this.state.allTicketsContent;\n      dsource[i].status=\"assigned\";\n\n      this.setState({allTicketsContent:dsource});\n      this.reloadTickets();\n    }\n\n    confirmTickets=(event,i)=>{\n      let obj=this.state.fix_date.find(o=>Object.keys(o)==i);\n      \n      Ajax(\"POST\",\"/tickets/\"+sessionStorage.username+\"/staff-action\", {\"action\":\"accept\"},\n          // successful callback\n          function(res) {\n            console.log(\"good\");\n          },\n          // failed callback\n          function() {\n            console.log('fail');\n          }\n        );\n      Ajax('PUT', \"/tickets/\"+sessionStorage.username+\"/staff-update\", {\"fix_date\":obj[i]},\n          // successful callback\n          function(res) {\n            console.log(\"good\");\n          },\n          // failed callback\n          function() {\n            console.log('fail');\n          }\n        );\n      \n      let existingTicketContent=this.state.allTicketsContent;\n      existingTicketContent[i].status=\"in progress\";\n      existingTicketContent[i].fix_date=obj[i];\n      this.setState({allTicketsContent:existingTicketContent});\n      this.reloadTickets();\n    }\n\n    declineTicket=()=>{\n      \n    }\n    \n    render() {\n        console.log(this.state.datasource);\n        const columns=[{\n          title: 'Ticket ID',\n          dataIndex: 'ticket_id',\n          render: (text) => <a>{text}</a>,\n        },\n        {\n          title: 'Unit',\n          dataIndex: 'unit',\n        },\n        {\n          title: 'Subject',\n          dataIndex: 'subject',\n        },\n        {\n          title: 'Submitted time',\n          dataIndex: 'created',\n          sorter: (a, b) => Date.parse(a.created) - Date.parse(b.created),\n          sortDirections: ['descend', 'ascend'],\n        },\n        {\n          title: 'Category',\n          dataIndex: 'category',\n        },\n        {\n          title: 'Priority',\n          dataIndex: 'priority',\n          sorter: (a, b) => a.priortyidx - b.priortyidx,\n          sortDirections: ['descend', 'ascend'],\n        },    \n        {\n          title: 'To Do',\n          dataIndex: 'acceptDecline',\n        },      \n      ];\n        return(\n            <div>\n                <Navigation/>\n\n                <div class=\"managerWelcome\">\n                    Welcome Staff\n                </div>\n                <h3> Your Orders </h3>\n                <Space direction=\"vertical\">\n                  <Button>Refersh Ticket</Button>\n                  <Table scroll={{y:500}} dataSource={this.state.datasource} columns={columns} />\n                </Space>\n                \n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default TicketingStaff;","import React, {Component} from 'react';\n\nclass Button extends Component {\n    render() {\n        return (\n        <button className={ `btn ${this.props.className}`} >{this.props.content}</button>\n        );\n    }\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nimport Blank from '../components/Blank';\nimport DropDown from \"../components/DropDown\";\nimport Button from \"../components/Button\";\nimport { Table, Input, Dropdown } from 'antd';\n\nclass TicketingResident extends Component {\n    constructor() {\n        super();\n        this.state = {\n            allTicketsTag: ['tk1', 'tk2', 'tk3', 'tk4'],\n            allTicketsContent: [{\n                \"ticket_id\": \"0001233\",\n                \"unit\": '711',\n                \"subject\": \"water leak\",\n                \"created\": \"2020-09-18T14:48:00\",\n                \"category\": \"water\",\n                \"priority\": \"high\",\n                \"status\": \"open\",\n                \"review\": <Button className=\"ticket-history-btn\" content=\"comment\" />\n            },\n            {\n                \"ticket_id\": \"0032134\",\n                \"unit\": '711',\n                \"subject\": \"bear sleeping on sofa\",\n                \"created\": \"2020-09-11T14:48:00\",\n                \"category\": \"misc\",\n                \"priority\": \"medium\",\n                \"status\": \"assigned\",\n                \"review\": <Button className=\"ticket-history-btn\" content=\"comment\" />\n            },\n            {\n                \"ticket_id\": \"0123435\",\n                \"unit\": '711',\n                \"subject\": \"sink clog\",\n                \"created\": \"2020-09-11T14:48:00\",\n                \"category\": \"sink\",\n                \"priority\": \"medium\",\n                \"status\": \"completed\",\n                \"review\": <Button className=\"ticket-history-btn\" content=\"review\" />\n            },\n            {\n                \"ticket_id\": \"0001394218\",\n                \"unit\": '900',\n                \"subject\": \"kitchen\",\n                \"created\": \"2020-09-18T14:48:00\",\n                \"category\": \"water\",\n                \"priority\": \"high\",\n                \"status\": \"completed\",\n                \"review\": <Button className=\"ticket-history-btn\" content=\"review\" />\n            },\n            ],\n        }\n    }\n    render() {\n        const { TextArea } = Input;\n        const location = [\"--None--\", \"Balcony/Patio\", \"Dining Room\", \"Elevator\", \"Exterior\",\n            \"Hallway\", \"Kitchen\", \"Laundry Room\", \"Living Room\", \"Master Bathroom\",\n            \"Master Bedroom\", \"Other Bathroom\", \"Other Bedroom\", \"Stairs\", \"Unit Wide\", \"Utility Closet\"];\n        const category = [\"--None--\", \"Appliance\", \"Electrical\", \"Exterior\", \"HVAC\", \"Interior\",\n            \"Locks/Keys\", \"Plumbing\"];\n        const contact = [\"--None--\", \"phone\", \"email\"];\n\n        let datasource = [];\n        let columns = [{\n            title: 'Ticket ID',\n            dataIndex: 'ticket_id',\n            render: (text) => <a>{text}</a>,\n        },\n        {\n            title: 'Subject',\n            dataIndex: 'subject',\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n        },\n        {\n            title: 'Priority',\n            dataIndex: 'priority',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n        },\n        {\n            title: 'Comment/Review',\n            dataIndex: 'review',\n        },\n        ];\n\n        this.state.allTicketsTag.map((cdiv, i) => {\n            datasource.push({\n                key: i,\n                ticket_id: <a href=''>{this.state.allTicketsContent[i].ticket_id}</a>,\n                unit: this.state.allTicketsContent[i].unit,\n                subject: this.state.allTicketsContent[i].subject,\n                created: this.state.allTicketsContent[i].created,\n                category: this.state.allTicketsContent[i].category,\n                priority: this.state.allTicketsContent[i].priority,\n                status: this.state.allTicketsContent[i].status,\n                review: this.state.allTicketsContent[i].review,\n            })\n        });\n\n        return (\n            <div className=\"ticketing-resident\">\n                <Navigation />\n                <div className=\"main\">\n                    <div className = \"dashboard-main\">\n                        <h2> SUBMIT A WORK ORDER </h2>\n                        <h5>Contact Info</h5>\n                        <Blank text=\"Home\" />\n                        <Blank text=\"First Name\" />\n                        <Blank text=\"Last Name\" />\n                        <Blank text=\"Email\" />\n                        <Blank text=\"Phone\" />\n                        <DropDown elements={contact} description=\"Preferred Contact Method\" />\n                        <h5 className = \"ticketing-subtitle\" >Issue Description</h5>\n                        <DropDown elements={location} description=\"Location\" />\n                        <DropDown elements={category} description=\"Category\" />\n                        <p>Description</p>\n                        <TextArea rows={4} />\n                        <div className=\"buttons\">\n                            <Button className=\"ticket-btn\" content=\"submit\" />\n                            <Button className=\"ticket-btn\" content=\"cancel\" />\n                        </div>\n                    </div>\n                    <div className = \"dashboard-main\">\n                        <div className=\"work-order maintenance-history\">\n                            <h5>Maintenance History</h5>\n                            <Table dataSource={datasource} columns={columns} />\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default TicketingResident;","\nimport React, { Component } from 'react';\nimport { Input, DatePicker,Tooltip,Form } from 'antd';\nimport {InfoCircleOutlined,FieldNumberOutlined,UserOutlined} from '@ant-design/icons';\nimport moment from 'moment';\n\nclass ResidentSignUp extends Component {\n    onChange = (param)=>{\n        // console.log(moment(param).format(\"YYYY/MM/DD\"));\n        // alert(moment(param).format(\"YYYY-MM-DD\"));\n       moment(param).format(\"YYYY-MM-DD\");\n     \n    }\n    \n    render() {\n        const dateFormat = 'YYYY-MM-DD';\n\n        return (\n            <div className=\"additionalInfo\">\n                    {/* <h1>This is RESIDENT additional components</h1> */}\n                   <Form.Item\n                         label =\"Unit Number \" \n                         name=\"unit_num\"\n                         rules={[{ required: true, message: 'Please input your Unit Number!' }]}\n                    >\n                                   \n                       <Input prefix={<FieldNumberOutlined className=\"site-form-item-icon\" />}  placeholder=\"Unit Number\" />\n                    </Form.Item>\n                    \n                    <Form.Item\n                         label =\"Birth Date \" \n                         name=\"birthday\"\n                         rules={[{ required: true, message: 'Please select your birth date!' }]}\n                    >\n                         <DatePicker placeholder = \"birth date\" format = {dateFormat} onChange={this.onChange} style={{ width: '100%' }} />      \n    \n                    </Form.Item>\n               \n            \n            </div>\n        );\n    }\n}\n\nexport default ResidentSignUp;","\nimport React, { Component } from 'react';\nimport { Input, DatePicker,Tooltip,Form } from 'antd';\nimport {InfoCircleOutlined,FieldNumberOutlined,UserOutlined} from '@ant-design/icons';\nclass ManagerSignUp extends Component {\n   \n    render() {\n        return (\n            <div className=\"additionalInfo\">\n                    {/* <h1>This is Manager additional components</h1> */}\n                   {/* <Form.Item\n                         label =\"Manager ID \" \n                         name=\"ManagerId\"\n                         rules={[{ required: true, message: 'Please input your Unit Number!' }]}\n                    >\n                                   \n                                <Input prefix={<FieldNumberOutlined className=\"site-form-item-icon\" />}  placeholder=\"Unit Number\" />\n                    </Form.Item> */}\n                    \n                \n               \n            \n            </div>\n        );\n    }\n}\n\nexport default ManagerSignUp;\n","\nimport React, { Component } from 'react';\nimport { Input, DatePicker,Tooltip,Form,Select } from 'antd';\nimport {InfoCircleOutlined,FieldNumberOutlined,UserOutlined} from '@ant-design/icons';\n\n\nclass StaffSignUp extends Component {\n    \n    handleChange = (param)=>{\n       return param.key;\n    }\n\n    render() {\n        const { Option } = Select;\n       \n\n        return (\n            <div className=\"additionalInfo\">\n                  \n                   <Form.Item\n                         label =\"Category \" \n                         name=\"category\"\n                         rules={[{ required: true, message: 'Please select your category!' }]}\n                    >\n                    \n                    <Select\n                        labelInValue\n                        defaultValue={{ value: 'Maintenance Category' }}\n                        style={{ width: '100%' }}\n                        onChange={this.handleChange}\n                    >\n                        <Option value=\"001\">Appliances</Option>\n                        <Option value=\"002\">Cable</Option>\n                        <Option value=\"003\">Water</Option>\n                        <Option value=\"004\">Electricity</Option>\n                        <Option value=\"005\">Floor</Option>\n                        <Option value=\"006\">Door</Option>\n                        \n                    </Select>\n                    </Form.Item>\n\n                    \n               \n            \n            </div>\n        );\n    }\n}\n\nexport default StaffSignUp;\n","//此为拦截器\nimport axios from \"axios\";\n\n//1.创建instance\nconst service = axios.create({\n    baseURL: '',\n    timeout: 5000,\n    \n  });\n\n  // 2. 添加请求拦截器\nservice.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    return config;\n  }, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n  });\n\n// 3. 添加响应拦截器\nservice.interceptors.response.use(function (response) {\n    // 对响应数据做点什么\n    return response;\n  }, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n  });\n\n  export default service;","import React,{Component,Fragment} from \"react\";\n\nimport {Radio, Row, Col,Form, Input, Button, Checkbox } from 'antd';\n\nimport {MailOutlined,UserOutlined, LockOutlined,PhoneOutlined} from '@ant-design/icons';\nimport ResidentSignUp from './ResidentSignUp';\nimport ManagerSignUp from './ManagerSignUp';\nimport StaffSignUp from './StaffSignUp';\nimport {RegisterRequest} from './AccountAxios';\n\nclass RegisterForm extends Component{\n    constructor(){\n        super();\n        this.state  = {\n        //    type: \"\",\n        };\n      \n    }\n   \n      onFinish = (values) => {\n        const personType = this.props.user_type;\n        // this.dataFromChild(this.props.formType);\n       RegisterRequest(values,personType).then(response =>{          \n            console.log(response);\n        }).catch(error =>{\n            console.log(error);\n        })\n        // console.log('Received values of form: ', values);\n      };\n\n    //    dataFromChild = (data)=>{\n    //     this.setState({\n    //         type: data,\n    //     })\n    //     console.log(this.state);\n    //    }\n     \n\n    render(){\n        \n        const {user_type} = this.props;\n       \n        \n        const result = () =>{\n            if(user_type === \"resident\"){\n               \n                return <ResidentSignUp/>;\n            }\n            else if(user_type === \"manager\"){\n              \n                return <ManagerSignUp/>;\n            }\n            else if (user_type === \"maintanence\") {\n               \n                return <StaffSignUp/>;\n            }\n        \n        }\n        return(\n                 <Fragment>\n                     <h4>Welcome to {this.props.user_type} portal!</h4>\n                     <br/>\n                     <br/>\n                    <div className = \"registerform-header\">\n                        {/* <p className = \"column\">Create a new account</p> */}\n                        \n                    </div>\n                     \n                    <div className = \"form-content\">\n\n                            <Form\n                                name=\"normal_login\"\n                                className=\"login-form\"\n                                initialValues={{ remember: true }}\n                                onFinish={this.onFinish}\n                            >\n                 \n                                <Form.Item\n                                    label =\"First Name: \" \n                                     name=\"first_name\"\n                                    rules={[{ required: true, message: 'Please input your First Name!' }]}\n                                >\n                                   \n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}  placeholder=\"First Name\" />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label =\"Last Name: \"\n                                     name=\"last_name\"\n                                    rules={[{ required: true, message: 'Please input your Last Name!' }]}\n                                >\n                                   \n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}  placeholder=\"Last Name\" />\n                                </Form.Item>\n\n                                <Form.Item\n                                   label =\"Email:\"\n                                      name=\"username\"\n                                    rules={[{ required: true, message: 'Please input your Email address!' }]}\n                                >\n                                    \n                                <Input type = \"email\" prefix={<MailOutlined className=\"site-form-item-icon\" />}  placeholder=\"Email Address\" />\n                                </Form.Item>\n\n                                <Form.Item\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!',\n                                    },\n                                    ]}\n                                    hasFeedback\n                                >\n                                    <Input type = \"password\" prefix={<LockOutlined className=\"site-form-item-icon\" />}  placeholder=\"Paasowrd\"   />\n                                </Form.Item>\n\n                                <Form.Item\n                                    name=\"confirm\"\n                                    label=\"Confirm Password\"\n                                    dependencies={['password']}\n                                    hasFeedback\n                                    rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please confirm your password!',\n                                    },\n                                    ({ getFieldValue }) => ({\n                                        validator(rule, value) {\n                                        if (!value || getFieldValue('password') === value) {\n                                            return Promise.resolve();\n                                        }\n                                        return Promise.reject('The two passwords that you entered do not match!');\n                                        },\n                                    }),\n                                    ]}\n                                >\n                                    <Input type = \"password\" prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Confirm your paasowrd\" />\n                                </Form.Item>\n\n                                <Form.Item\n                                    name=\"phone_number\"\n                                    label=\"Phone Number\"\n                                    rules={[{ required: true, message: 'Please input your phone number!' }]}\n                                >\n                                    <Input prefix={<PhoneOutlined className=\"site-form-item-icon\" />}  style={{ width: '100%' }} \n                                    placeholder = \"Input your phone number\"/>\n                                </Form.Item>\n\n                                <Form.Item>     \n                                \n                                {result()}\n                               \n                                </Form.Item>\n                                \n                                <Form.Item>\n                                   \n                              \n                                   \n                                    <a className=\"login-form-forgot\" href=\"\">\n                                    Forgot password\n                                    </a>\n                                </Form.Item>\n\n                                <Form.Item>\n                                    \n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\n                                        Register\n                                    </Button>\n                                    \n                                </Form.Item>\n                            </Form>\n                    </div>\n                </Fragment>              \n           \n        )\n    }\n}\nexport default RegisterForm;\n","import service from './RequestInterceptor';\n\nexport function LoginRequest(data){\n    return service.request({  //返回给调用此方法的caller\n        url:\"/communitymanagement/login/\",\n        method: \"post\",\n        data: data,\n       \n    })\n}\n\n// export function RegisterRequest(data){\n//     return service.request({  //返回给调用此方法的caller\n//         url:\"/register/\",\n//         method: \"post\",\n//         data: data,\n        \n//     })\n// }\n\nexport function RegisterRequest(data,type){\n    return service.request({  //返回给调用此方法的caller\n        url:\"/communitymanagement/registration/\" + type,\n        method: \"post\",\n        data: data,\n        \n    })\n}","import React, { Component } from 'react';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nimport RegistrationForm from \"../components/RegistrationForm\";\n\n\nclass RegisterPage extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            user_type: \"resident\"\n        };\n    }\n   \n    getUserType() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const myParam = urlParams.get('usertype');\n        return myParam;\n    }\n\n    render() {\n        \n        return (\n            \n            <div className=\"registerLogin\">\n                <Navigation />\n                <div className=\"main\">\n                \n                  <div className = \"registerPart\">\n\n                  <RegistrationForm user_type = {this.getUserType()}/>\n                    \n                  </div>\n                </div>\n            \n               <Footer/>\n               \n            </div>\n            \n        );\n    }\n}\n\nexport default RegisterPage;","import React, {Component} from 'react';\n\nclass WorkOrder extends Component {\n    render() {\n        return(\n            <div className = \"workorder\"> \n                <span>{this.props.id}</span>     \n                <span>{this.props.subject}</span>\n                <span>{this.props.priority}</span>  \n                <span>{this.props.description}</span>\n                <span>{this.props.status}</span>\n            </div>\n        );\n    }\n}\n\nexport default WorkOrder;","import React, { Component } from 'react';\n\nclass News extends Component {\n    render() {\n        return (\n            <div className=\"news-item\">\n                <span className=\"subject\">{this.props.subject}</span>\n                <span className=\"date\">{this.props.date}</span>\n            </div>\n        );\n    }\n}\n\nexport default News;","import React, { Component } from 'react';\n\nclass ChatDashboard extends Component {\n    render() {\n        return (\n            <div className=\"chat-item\">\n                <span className=\"sender\">{this.props.sender}</span>\n                <span className=\"message\">{this.props.message}</span>\n                <span className=\"date\">{this.props.date}</span>\n            </div>\n        );\n    }\n}\n\nexport default ChatDashboard;","import React, { Component } from 'react';\nimport { Tag } from \"antd\";\n\nclass StatusTag extends Component {\n\n\trender() {\n\t\tif (this.props.status === \"OPEN\")\n\t\t\treturn (\n\t\t\t\t<Tag color=\"red\">OPEN</Tag>\n\t\t\t); else if (this.props.status === \"ASSIGNED\") {\n\t\t\t\treturn (\n\t\t\t\t\t<Tag color=\"gold\">ASSIGNED</Tag>\n\t\t\t\t);\n\t\t\t} else if (this.props.status === \"IN PROGRESS\"){\n\t\t\t\treturn (\n\t\t\t\t\t<Tag color=\"blue\">IN PROGRESS</Tag>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<Tag color=\"green\">COMPLETED</Tag>\n\t\t\t\t);\n\t\t\t}\n\t}\n}\n\nexport default StatusTag;","import React, { Component } from 'react';\nimport { Tag } from \"antd\";\n\nclass PriorityTag extends Component {\n\n\trender() {\n\t\tif (this.props.priority === \"LOW\")\n\t\t\treturn (\n\t\t\t\t<Tag color=\"green\">LOW</Tag>\n\t\t\t); else if (this.props.priority === \"HIGH\") {\n\t\t\t\treturn (\n\t\t\t\t\t<Tag color=\"red\">HIGH</Tag>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<Tag color=\"blue\">MEDIUM</Tag>\n\t\t\t\t);\n\t\t\t}\n\t}\n}\n\nexport default PriorityTag;","import React, { Component } from 'react';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nimport Button from '../components/Button';\nimport WorkOrder from '../components/WorkOrder';\nimport { Table } from 'antd';\nimport News from \"../components/News\";\nimport ChatDashboard from '../components/ChatDashboard';\nimport ajax from '../components/AJAX';\nimport StatusTag from \"../components/StatusTag\";\nimport PriorityTag from \"../components/PriorityTag\";\n\nclass Dashboard extends Component {\n    constructor() {\n        super();\n        this.state = {\n            allTicketsContent: [],\n            news: [{\n                \"subject\": \"news1\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news2\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news3\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news4\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news5\",\n                \"date\": \"mm/dd/yy\"\n            },\n            ],\n            messages: [{\n                \"sender\": \"manager\",\n                \"message\": \"your work order completed\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"sender\": \"manager\",\n                \"message\": \"your work order completed\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"sender\": \"manager\",\n                \"message\": \"your work order completed\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"sender\": \"manager\",\n                \"message\": \"your work order completed\",\n                \"date\": \"mm/dd/yy\"\n            },]\n        }\n    }\n\n\n    componentDidMount() {\n        fetch(\"http://localhost:8080/communitymanagement/dashboard/resident\")\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    let items = res;\n                    if (!items || items.length === 0) {\n                        alert('No tickets.');\n                    } else {\n                        this.setState({ allTicketsContent: items });\n                        console.log(this.state.allTicketsContent);\n                    }\n\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    //   this.setState({\n                    //     isLoaded: true,\n                    //     error\n                    //   });\n                }\n            )\n    }\n\n    render() {\n\n        let newsDivs = [];\n        this.state.news.map((subject, i) => {\n            newsDivs.push(<News\n                subject={this.state.news[i].subject}\n                date={this.state.news[i].date}\n            />)\n        })\n\n        let messageDivs = [];\n        this.state.messages.map((date, i) => {\n            messageDivs.push(<ChatDashboard\n                sender={this.state.messages[i].sender}\n                message={this.state.messages[i].message}\n                date={this.state.messages[i].date}\n            />)\n        })\n\n        let existingOrder = [];\n        let completedOrder = [];\n        let columns = [{\n            title: 'Ticket ID',\n            dataIndex: 'ticket_id',\n            render: (text) => <a>{text}</a>,\n        },\n        {\n            title: 'Subject',\n            dataIndex: 'subject',\n        },\n        {\n            title: 'Description',\n            dataIndex: 'description',\n        },\n        {\n            title: 'Priority',\n            dataIndex: 'priority',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n        },\n        ];\n\n        this.state.allTicketsContent.map((content, i) => {\n            if (content.status === \"COMPLETED\") {\n                completedOrder.push({\n                    key: i,\n                    ticket_id: <a href=''>{content.id}</a>,\n                    unit: content.unitNumber,\n                    subject: content.subject,\n                    created: content.created,\n                    priority: <PriorityTag priority={content.priority} />,\n                    status: <StatusTag status={content.status} />,\n                    description: content.description,\n                    fixDate: content.fixDate,\n                })\n            } else {\n                existingOrder.push({\n                    key: i,\n                    ticket_id: <a href=''>{content.id}</a>,\n                    unit: content.unitNumber,\n                    subject: content.subject,\n                    created: content.created,\n                    priority: <PriorityTag priority={content.priority} />,\n                    status: <StatusTag status={content.status} />,\n                    description: content.description,\n                    fixDate: content.fixDate,\n                })\n            }\n        });\n\n        return (\n            <div className=\"dashboard\">\n                <Navigation\n                    dashboard=\"/DashboardResident\"\n                    ticket=\"/TicketingResident\"\n                    chat=\"/ChatResident\"\n                    logout=\"/logout\"\n                />\n                <div className=\"dashboard-main\">\n                    <div className=\"balance\">\n                        <div>Balance Due:</div>\n                        <h1>$0.00</h1>\n                        <Button className=\"center\" content=\"Make a Payment\" />\n                        <Button className=\"center\" content=\"Submit a Work Order\" />\n                    </div>\n                    <div className=\"chat-dashboard dashboard-item\">\n                        <h5 className=\"chat-title\">Messages</h5>\n                        {messageDivs}\n                        <Button className=\"chat-button\" content=\"Let's Chat\"></Button>\n                    </div>\n                    <div className=\"news dashboard-item\">\n                        <h5 className=\"news-title\">Community News</h5>\n                        {newsDivs}\n                    </div>\n                </div>\n\n                <div className=\"dashboard-main\">\n                    <div className=\"work-order\">\n                        <h5>Existing Work Orders</h5>\n                        <Table scroll={{ y: 500 }} dataSource={existingOrder} columns={columns} />\n                        <Button content=\"View Calendar\"></Button>\n                    </div>\n\n                    <div className=\"work-order\">\n                        <h5>Completed Work Orders</h5>\n                        <Table scroll={{ y: 500 }} dataSource={completedOrder} columns={columns} />\n                    </div>\n                </div>\n\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;","import React, {Component} from 'react';\n\nimport { Calendar } from 'antd';\n\nclass Calender extends Component{\n  constructor(){\n    super();\n}\n\n  getListData=(value)=> {\n    let listData;\n    switch (value.date()) {\n      case 8:\n        listData = [\n          { type: 'warning', content: 'This is warning event.' },\n          { type: 'normal', content: 'This is usual event.' },\n        ]; break;\n      case 10:\n        listData = [\n          { type: 'warning', content: 'This is warning event.' },\n          { type: 'normal', content: 'This is usual event.' },\n          { type: 'error', content: 'This is error event.' },\n        ]; break;\n      case 15:\n        listData = [\n          { type: 'warning', content: 'This is warning event' },\n          { type: 'normal', content: 'This is very long usual event。。....' },\n          { type: 'error', content: 'This is error event 1.' },\n          { type: 'error', content: 'This is error event 2.' },\n          { type: 'error', content: 'This is error event 3.' },\n          { type: 'error', content: 'This is error event 4.' },\n        ]; break;\n      default:\n    }\n    return listData || [];\n  }\n  \n  dateCellRender=(value)=> {\n    const listData = this.getListData(value);\n    return (\n      <ul className=\"events\">\n        {\n          listData.map(item => (\n            <li key={item.content}>\n              <span className={`event-${item.type}`}>●</span>\n              {item.content}\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n  \n  getMonthData=(value)=> {\n    if (value.month() === 8) {\n      return 1394;\n    }\n  }\n  \n  monthCellRender=(value)=> {\n    const num = this.getMonthData(value);\n    return num ? (\n      <div className=\"notes-month\">\n        <section>{num}</section>\n        <span>Backlog number</span>\n      </div>\n    ) : null;\n  }\n  \n  render(){\n    return (\n      <Calendar dateCellRender={this.dateCellRender} monthCellRender={this.monthCellRender} />\n    );\n  }\n\n}\n\n\nexport default Calender;","import React,{Component,Fragment} from \"react\";\n import {Radio, Row, Col,Form, Input, Button, Checkbox } from 'antd';\n import { UserOutlined, LockOutlined } from '@ant-design/icons';\n import {LoginRequest} from './AccountAxios';\n \n class Login extends Component{\n     constructor(){\n         super();\n         this.state  = {\n            //  value:0\n         };\n \n     }\n       onFinish = (values) => {\n        LoginRequest(values).then(response =>{\n               \n               console.log(response);\n           }).catch(error =>{\n                console.log(error);\n           })\n     \n       };\n \n       onChange = e => {\n         console.log('radio checked', e.target.value);\n         this.setState({\n           value: e.target.value,\n         });\n       };\n \n \n \n     render(){\n         return(\n                  <Fragment>\n                     <div className = \"form-header\">\n                         <p className = \"column\">Login</p>\n                     \n                     </div>\n                      \n                     <div className = \"form-content\">\n \n                             <Form\n                                 name=\"normal_login\"\n                                 className=\"login-form\"\n                                 initialvalues={{ remember: true }}\n                                 onFinish={this.onFinish}\n                                 >\n                               \n                                 <Form.Item\n                                      name=\"email\"\n                                     rules={[{ required: true, message: 'Please input your Email!' }]}\n                                 >\n                                      \n                                 <Input type = \"email\" prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n                                 </Form.Item>\n \n                                 <Form.Item\n                                     name=\"password\"\n                                     rules={[{ required: true, message: 'Please input your Password!' }]}\n                                 >\n                                 <Input  \n                                 prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                     type=\"password\" \n                                     placeholder=\"Password\"\n                                 />\n                                 </Form.Item>\n \n                                 \n                                 <Form.Item>\n                            \n                                     <a className=\"login-form-forgot\" href=\"\">\n                                     Forgot password\n                                     </a>\n                                 </Form.Item>\n \n                                 <Form.Item>\n                                     \n                                     <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\n                                     Log in\n                                     </Button>\n                                     \n                                 </Form.Item>\n                             </Form>\n                     </div>\n                 </Fragment>              \n            \n         )\n     }\n }\n export default Login;\n","import React, { Component } from 'react';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nimport RegistrationForm from \"../components/RegistrationForm\";\nimport LoginForm  from \"../components/LoginForm\";\n\nclass LoginPage extends Component {\n    \n    constructor(){\n        super();\n        this.state ={\n            formType: \"Maintanence\"\n        };\n    }\n   \n\n    render() {\n        \n        return (\n            \n            <div className=\"registerLogin\">\n                <div className=\"main\">\n                  \n                  <div className = \"centerPart\">\n                  \n                  <LoginForm/>\n                  </div>\n\n                </div>\n               \n            </div>\n            \n        );\n    }\n}\n\nexport default LoginPage;","import React, { Component } from 'react';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nimport Button from '../components/Button';\nimport WorkOrder from '../components/WorkOrder';\nimport { Table } from 'antd';\nimport News from \"../components/News\";\nimport ChatDashboard from '../components/ChatDashboard';\nimport StatusTag from \"../components/StatusTag\";\nimport PriorityTag from \"../components/PriorityTag\";\n\nclass DashboardManager extends Component {\n    constructor() {\n        super();\n        this.state = {\n            allTicketsContent: [],\n            news: [{\n                \"subject\": \"news1\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news2\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news3\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news4\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news5\",\n                \"date\": \"mm/dd/yy\"\n            },\n            ],\n            messages: [{\n                \"sender\": \"unit 101\",\n                \"message\": \"noise complaint\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"sender\": \"unit 202\",\n                \"message\": \"review submitted\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"sender\": \"unit 303\",\n                \"message\": \"package missing\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"sender\": \"staff Ben\",\n                \"message\": \"order completed\",\n                \"date\": \"mm/dd/yy\"\n            },]\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"/communitymanagement/dashboard/manager\")\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    let items = res;\n                    if (!items || items.length === 0) {\n                        alert('No tickets.');\n                    } else {\n                        this.setState({ allTicketsContent: items });\n                        console.log(this.state.allTicketsContent);\n                    }\n\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    //   this.setState({\n                    //     isLoaded: true,\n                    //     error\n                    //   });\n                }\n            )\n    }\n\n    render() {\n        let newsDivs = [];\n        this.state.news.map((subject, i) => {\n            newsDivs.push(<News\n                subject={this.state.news[i].subject}\n                date={this.state.news[i].date}\n            />)\n        })\n\n        let messageDivs = [];\n        this.state.messages.map((date, i) => {\n            messageDivs.push(<ChatDashboard\n                sender={this.state.messages[i].sender}\n                message={this.state.messages[i].message}\n                date={this.state.messages[i].date}\n            />)\n        })\n\n        let existingOrder = [];\n        let completedOrder = [];\n        let columns = [{\n            title: 'Ticket ID',\n            dataIndex: 'ticket_id',\n            render: (text) => <a>{text}</a>,\n        },\n        {\n            title: 'Subject',\n            dataIndex: 'subject',\n        },\n        {\n            title: 'Description',\n            dataIndex: 'description',\n        },\n        {\n            title: 'Priority',\n            dataIndex: 'priority',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n        },\n        ];\n\n        this.state.allTicketsContent.map((content, i) => {\n            if (content.status === \"COMPLETED\") {\n                completedOrder.push({\n                    key: i,\n                    ticket_id: <a href=''>{content.id}</a>,\n                    unit: content.unitNumber,\n                    subject: content.subject,\n                    created: content.created,\n                    priority: <PriorityTag priority={content.priority} />,\n                    status: <StatusTag status={content.status} />,\n                    description: content.description,\n                    fixDate: content.fixDate,\n                })\n            } else {\n                existingOrder.push({\n                    key: i,\n                    ticket_id: <a href=''>{content.id}</a>,\n                    unit: content.unitNumber,\n                    subject: content.subject,\n                    created: content.created,\n                    priority: <PriorityTag priority={content.priority} />,\n                    status: <StatusTag status={content.status} />,\n                    description: content.description,\n                    fixDate: content.fixDate,\n                })\n            }\n        });\n\n        return (\n            <div className=\"dashboard\">\n                <Navigation\n                    dashboard=\"/DashboardManager\"\n                    ticket=\"/TicketingManager\"\n                    chat=\"/ChatManager\"\n                    logout=\"/logout\"\n                />\n                <div className=\"dashboard-main\">\n                    <div className=\"balance\">\n                        <Button className=\"center\" content=\"Manage All Payments\" />\n                        <Button className=\"center\" content=\"Manage All Work Orders\" />\n                    </div>\n                    <div className=\"chat-dashboard dashboard-item\">\n                        <h5 className=\"chat-title\">Messages</h5>\n                        {messageDivs}\n                        <Button className=\"chat-button\" content=\"Let's Chat\"></Button>\n                    </div>\n                    <div className=\"news dashboard-item\">\n                        <h5 className=\"news-title\">Community News</h5>\n                        {newsDivs}\n                        <Button className=\"chat-button\" content=\"Write a Notice\"></Button>\n                    </div>\n                </div>\n\n                <div className=\"dashboard-main\">\n                    <div className=\"work-order\">\n                        <h5>Existing Work Orders</h5>\n                        <Table scroll={{ y: 500 }} dataSource={existingOrder} columns={columns} />\n                        <div>\n                            <Button content=\"Assign a Work Order\"></Button>\n                        </div>\n                        <div>\n                            <Button content=\"View Calendar\"></Button>\n                        </div>\n                    </div>\n\n                    <div className=\"work-order\">\n                        <h5>Completed Work Orders</h5>\n                        <Table scroll={{ y: 500 }} dataSource={completedOrder} columns={columns} />\n                    </div>\n                </div>\n\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default DashboardManager;","import React, { Component } from 'react';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nimport Button from '../components/Button';\nimport WorkOrder from '../components/WorkOrder';\nimport { Table } from 'antd';\nimport News from \"../components/News\";\nimport ChatDashboard from '../components/ChatDashboard';\n\nclass DashboardStaff extends Component {\n    constructor() {\n        super();\n        this.state = {\n            allTicketsTag: ['tk1', 'tk2', 'tk3'],\n            allTicketsContent: [{\n                \"ticket_id\": \"0001233\",\n                \"unit\": '711',\n                \"subject\": \"water leak\",\n                \"created\": \"2020-09-18T14:48:00\",\n                \"category\": \"water\",\n                \"priority\": \"high\",\n                \"status\": \"assigned\",\n                \"review\": <Button className=\"review-btn\" content=\"view\" />\n            },\n            {\n                \"ticket_id\": \"0032134\",\n                \"unit\": '711',\n                \"subject\": \"bear sleeping on sofa\",\n                \"created\": \"2020-09-11T14:48:00\",\n                \"category\": \"misc\",\n                \"priority\": \"medium\",\n                \"status\": \"assigned\",\n                \"review\": <Button className=\"review-btn\" content=\"view\" />\n            },\n            {\n                \"ticket_id\": \"0123435\",\n                \"unit\": '711',\n                \"subject\": \"sink clog\",\n                \"created\": \"2020-09-11T14:48:00\",\n                \"category\": \"sink\",\n                \"priority\": \"medium\",\n                \"status\": \"assigned\",\n                \"review\": <Button className=\"review-btn\" content=\"view\" />\n            }\n            ],\n            news: [{\n                \"subject\": \"news1\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news2\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news3\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news4\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"subject\": \"news5\",\n                \"date\": \"mm/dd/yy\"\n            },\n            ],\n            messages: [{\n                \"sender\": \"unit 101\",\n                \"message\": \"noise complaint\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"sender\": \"unit 202\",\n                \"message\": \"review submitted\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"sender\": \"unit 303\",\n                \"message\": \"package missing\",\n                \"date\": \"mm/dd/yy\"\n            },\n            {\n                \"sender\": \"staff Ben\",\n                \"message\": \"order completed\",\n                \"date\": \"mm/dd/yy\"\n            },]\n        }\n    }\n\n    render() {\n        let ticketDivs = [];\n        this.state.allTicketsTag.map((cdiv, i) => {\n            ticketDivs.push(<WorkOrder\n                id={this.state.allTicketsContent[i].id}\n                unit={this.state.allTicketsContent[i].unit}\n                category={this.state.allTicketsContent[i].category}\n                description={this.state.allTicketsContent[i].description}\n                status={this.state.allTicketsContent[i].status}\n                key={cdiv}\n                id={cdiv}\n            />);\n        })\n\n        let newsDivs = [];\n        this.state.news.map((subject, i) => {\n            newsDivs.push(<News\n                subject={this.state.news[i].subject}\n                date={this.state.news[i].date}\n            />)\n        })\n\n        let messageDivs = [];\n        this.state.messages.map((date, i) => {\n            messageDivs.push(<ChatDashboard\n                sender={this.state.messages[i].sender}\n                message={this.state.messages[i].message}\n                date={this.state.messages[i].date}\n            />)\n        })\n\n        let datasource = [];\n        let columns = [{\n            title: 'Ticket ID',\n            dataIndex: 'ticket_id',\n            render: (text) => <a>{text}</a>,\n        },\n        {\n            title: 'Subject',\n            dataIndex: 'subject',\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n        },\n        {\n            title: 'Priority',\n            dataIndex: 'priority',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n        },\n        ];\n\n\n        let completed = [{\n            title: 'Ticket ID',\n            dataIndex: 'ticket_id',\n            render: (text) => <a>{text}</a>,\n        },\n        {\n            title: 'Subject',\n            dataIndex: 'subject',\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n        },\n        {\n            title: 'Priority',\n            dataIndex: 'priority',\n        },\n        {\n            title: 'Review',\n            dataIndex: 'review',\n        },\n        ];\n\n        this.state.allTicketsTag.map((cdiv, i) => {\n            datasource.push({\n                key: i,\n                ticket_id: <a href=''>{this.state.allTicketsContent[i].ticket_id}</a>,\n                unit: this.state.allTicketsContent[i].unit,\n                subject: this.state.allTicketsContent[i].subject,\n                created: this.state.allTicketsContent[i].created,\n                category: this.state.allTicketsContent[i].category,\n                priority: this.state.allTicketsContent[i].priority,\n                status: this.state.allTicketsContent[i].status,\n                review: this.state.allTicketsContent[i].review,\n            })\n        });\n\n        return (\n            <div className=\"dashboard\">\n                <Navigation />\n\n                <div className=\"dashboard-main\">\n                    <div className=\"work-order\">\n                        <h5>Assigned Work Orders</h5>\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={columns} />\n                        <div>\n                            <Button content=\"Manage Your Orders\"></Button>\n                        </div>\n                    </div>\n\n\n\n                    <div className=\"work-order\">\n                        <h5>Completed Work Orders</h5>\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={completed} />\n                    </div>\n                </div>\n\n                <div className=\"dashboard-main\">\n                    <div className=\"work-order\">\n                        <h5> Work Order In Progress</h5>\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={columns} />\n                        <div>\n                            <Button content=\"View Calendar\"></Button>\n                        </div>\n                    </div>\n                </div>\n\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default DashboardStaff;","import React, {Component} from 'react';\nimport { List, Avatar, Space, Input, Button } from 'antd';\nimport Ajax from '../components/AJAX'\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport axios from 'axios'\n\nclass TicketingDetail extends Component {\n    constructor(){\n        super();\n        this.state = {\n            ticketDetail: { \"ticket_id\": \"1423124315\",\n                \"user_name\": \"daloias\",\n                \"assignee\": [\"Umisc co.\"],\n                \"subject\": \"bear sleeping on sofa\",\n                \"description\": \"I can see from the window that the bear is sleeping on my sofa and eat all the snacks around it! I'm so afraid to go inside now...\",\n                \"category\": \"misc\",\n                \"issue\": \"\",\n                \"ticket_status\":\"in progress\",\n                \"created\":\"09-19-2020T20:30:23\",\n                \"fix_date\":\"09-19-2020T21:30:23\",\n                \"priority\": \"high\"}\n,\n            ticketComments:[\n                {\n                    \"user_name\": \"Manager\",\n                    \"created\": [\"09-19-2020T20:40:23\"],\n                    \"body\": [\"Umisc co. will fix this issue\"],\n                },\n                {\n                \"user_name\": \"Umisc co.\",\n                \"created\": [\"09-19-2020T21:20:23\"],\n                \"body\": [\"We will be there after preperation\"],\n            }],\n            listData:[],\n            currentComment:[]\n        }\n    }\n    \n    componentDidMount(){\n        this.loadTicketContent();\n        this.reloadTicketDetail();\n    }\n    // if need props, use this.props to access\n    loadTicketContent = ()=>{\n        let tid=sessionStorage.getItem(\"inquiredTicketID\");\n        Ajax('GET', \"/tickets/\"+tid.toString(), [],\n        // successful callback\n            function(res) {\n                let item=JSON.parse(res);\n                this.setState({\n                    ticketDetail:item.ticket_detail,\n                    ticketComments:item.comments\n                })\n                console.log(\"good\");\n            },\n            // failed callback\n            function() {\n                console.log('fail');\n            }\n        ); \n    }\n\n    reloadTicketDetail = () =>{\n        let listDataTemp=[];\n        listDataTemp.push({\n            title: <h2>{this.state.ticketDetail.subject}</h2>,\n            avatar:<Avatar size=\"large\" style={{backgroundColor: '#87d068',}}>{this.state.ticketDetail.user_name[0].toUpperCase()}</Avatar>,\n            description:<div><Space direction='vertical'><p className=\"commentDescription\">{this.state.ticketDetail.description}</p></Space></div>\n        });\n        \n        this.state.ticketComments.map((cdiv, i) => {\n            listDataTemp.push({\n                title:<p className=\"commentTitle\">Re:{\" \"}{cdiv.user_name} created at {cdiv.created}</p>,\n                avatar:<Avatar size=\"large\" style={{backgroundColor: '#87d068',}}>{cdiv.user_name[0].toUpperCase()}</Avatar>,\n                description:<p className=\"commentDescription\">{cdiv.body}</p>\n            });\n        });\n        this.setState({listData:listDataTemp});\n    }\n\n    postComment = () =>{\n      \n      // just practice axios a little bit...\n      axios.put('/ticket'+sessionStorage.getItem(\"inquiredTicketID\")+'/update', {\n          params: {\n            comment: 12345\n          }\n        })\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n        \n        this.reloadTicketDetail();\n    }\n\n    addComment = (event) =>{\n        this.setState({currentComment:event.target.value});\n    }\n    render() {\n        const { TextArea } = Input;\n\n        return(\n            <div>\n                <Navigation/>\n                <div>\n                    <Container fluid>\n                        <Row>\n                        <Col xs={10}>\n                            <Space direction=\"vertical\">\n                                \n                                    <List\n                                        itemLayout=\"vertical\"\n                                        size=\"large\"\n                                        pagination={{\n                                        onChange: page => {\n                                            console.log(page);\n                                        },\n                                        pageSize: 4,\n                                        }}\n                                        dataSource={this.state.listData}\n                                        renderItem={item => (\n                                        <List.Item key={item.title}>\n                                        <List.Item.Meta avatar={item.avatar} title={item.title}/>\n                                            {item.description}\n                                        </List.Item>\n                                    )}\n                                    />\n\n                                    <div>\n                                        <TextArea rows={6} onChange={(event)=>this.addComment(event)}/>\n                                        <Button onClick={this.postComment}>Comment</Button>\n                                    </div>                            \n                                </Space>\n                            </Col>\n                            <Col xs={2}>\n                                <div className=\"ticketInfoArea\">\n                                <Space direction=\"vertical\">\n                                    <div>\n                                        <h3>Resident</h3>\n                                        <p>{this.state.ticketDetail.user_name}</p>\n                                    </div>\n                                    <div>\n                                        <h3>Created</h3>\n                                        <p>{this.state.ticketDetail.created}</p>\n                                    </div>\n                                    <div>\n                                        <h3>Assignee</h3>\n                                        <p>{this.state.ticketDetail.assignee}</p>\n                                    </div>\n                                    <div>\n                                        <h3>Fix date</h3>\n                                        <p>{this.state.ticketDetail.fix_date}</p>\n                                    </div>\n                                    <div>\n                                        <h3>Status</h3>\n                                        <p>{this.state.ticketDetail.ticket_status}</p>\n                                    </div>\n                                </Space>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n                \n                <Footer/>\n            </div>\n           \n        );\n    }\n}\n\nexport default TicketingDetail;","import React, { Component } from 'react';\nimport Login from './Login';\nimport Footer from '../components/Footer';\nimport { Avatar } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { useHistory } from 'react-router-dom';\n\nclass Home extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <div className=\"vertical-center\">\n                <h1 className=\"home-title\"> Welcome to WeLive Portal! </h1>\n                <Login />\n                <div>\n                    <p className=\"text-center\">New user? Register here:</p>\n                    <p className=\"text-center\">I am a:</p>\n                    <div className=\"avatar-registration-page\" >\n                        <a href=\"/register?usertype=resident\">\n                            <Avatar size={80}>\n                                Resident\n                        </Avatar>\n                        </a>\n                        <a href=\"/register?usertype=manager\">\n                            <Avatar size={80}>\n                                Manager\n                        </Avatar>\n                        </a>\n                        <a href=\"/register?usertype=maintanence\">\n                            <Avatar size={80}>\n                                Technician\n                        </Avatar>\n                        </a>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport TicketingManager from './pages/TicketingManager'\nimport TicketingStaff from './pages/TicketingStaff'\nimport TicketingResident from './pages/TicketingResident'\nimport Registeration from './pages/Registration';\nimport DashboardResident from './pages/DashboardResident';\nimport Calender from './pages/Calender';\nimport Login from './pages/Login';\nimport DashboardManager from './pages/DashboardManager';\nimport DashboardStaff from './pages/DashboardStaff';\nimport TicketingDetail from './pages/TicketingDetail';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <Router basename={'/communitymanagement'}>\n      <Route exact path='/' render={() =>\n        <Home />\n      } />\n      <Route exact path='/TicketingResident' render={() =>\n        <TicketingResident />\n      } />\n      <Route exact path='/TicketingManager' render={() =>\n        <TicketingManager />\n      } />\n      <Route exact path='/TicketingStaff' render={() =>\n        <TicketingStaff />\n      } />\n      <Route exact path='/login' render={() =>\n        <Login />\n      } />\n      <Route exact path='/register' render={() =>\n        <Registeration />\n      } />\n\n\n      <Route exact path='/Calender' render={() =>\n        <Calender />\n      } />\n\n      <Route exact path='/DashboardResident' render={() =>\n        <DashboardResident />\n      } />\n\n      <Route exact path='/DashboardManager' render={() =>\n        <DashboardManager />\n      } />\n\n      <Route exact path='/DashboardStaff' render={() =>\n        <DashboardStaff />\n      } />\n\n      <Route exact path='/TicketingDetail' render={() =>\n        <TicketingDetail />\n      } />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}