{"version":3,"sources":["logo.svg","components/Navigation.js","components/Footer.js","components/Blank.js","components/DropDown.js","components/AJAX.js","pages/TicketingManager.js","pages/TicketingStaff.js","components/Button.js","pages/TicketingResident.js","components/ResidentSignUp.js","components/ManagerSignUp.js","components/StaffSignUp.js","components/RequestInterceptor.js","components/RegistrationForm.js","components/AccountAxios.js","pages/Registration.js","components/WorkOrder.js","components/News.js","components/ChatDashboard.js","pages/DashboardResident.js","pages/Calender.js","components/LoginForm.js","pages/Login.js","pages/DashboardManager.js","pages/DashboardStaff.js","pages/TicketingDetail.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","href","Component","Footer","Blank","sendData","event","props","parentCallback","target","value","state","this","text","placeholder","DropDown","console","log","elements","items","entries","index","push","key","description","onChange","selected","disabled","hidden","ajax","method","url","data","successCallback","errorCallback","xhr","XMLHttpRequest","open","onload","status","responseText","onerror","error","send","setRequestHeader","TicketingManager","loadIssueCategory","Ajax","res","JSON","parse","setState","possible_issue_categories","ReloadTickets","dsource","allTicketsTag","map","cdiv","i","all_assignees","allTicketsContent","recommend_staff","assigneeTag_1","direction","iid","AssignmentCallBack","onClick","assignTickets","shape","assigneeTag","category","assignee","ticket_id","TicketIdStore","type","unit","unit_number","subject","created","submitted_date","issue","priority","datasource","tid","sessionStorage","setItem","HomeBlankCallBack","childData","childProps","FnameBlankCallBack","firstName","LnameBlankCallBack","lastName","contactDropDownCallBack","contact_method","locationDropDownCallBack","location","categoryDropDownCallBack","pos_locs","possible_locs","priortyDropDownCallBack","priorty","subjectBlankCallBack","DescriptionCallBack","SubmitTickets","today","Date","time","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","ticketData","Math","random","toString","substring","ticketSubmitMessage","refershTickets","length","ttags","priortyidx","allticketsContent","existingAssignments","assignment","tiid","asm","obj","find","o","Object","keys","findIndex","columns","title","dataIndex","render","sorter","a","b","sortDirections","class","Container","fluid","Row","Col","xs","scroll","y","dataSource","TicketingStaff","reloadTickets","acceptDeclineTagContent","acceptDeclineTagContent_1","acceptTicket","declineTicket","acceptDeclineTagContent_2","date","dateString","pushFixDate","confirmTickets","BacktoAcceptDecline","acceptDeclineTagContent_3","fix_date","acceptDecline","username","existing_fix_date","existingTicketContent","Button","content","TicketingResident","TextArea","Input","review","rows","ResidentSignUp","param","moment","format","Item","label","name","rules","required","message","prefix","FieldNumberOutlined","style","width","ManagerSignUp","StaffSignUp","handleChange","Option","Select","labelInValue","defaultValue","service","axios","create","baseURL","timeout","interceptors","request","use","config","Promise","reject","response","RegisterForm","onFinish","values","personType","user_type","then","catch","initialValues","remember","UserOutlined","MailOutlined","hasFeedback","LockOutlined","dependencies","getFieldValue","validator","rule","resolve","PhoneOutlined","htmlType","block","RegisterPage","URLSearchParams","window","search","get","RegistrationForm","getUserType","WorkOrder","id","News","ChatDashboard","sender","Dashboard","news","messages","ticketDivs","newsDivs","messageDivs","completed","Calender","getListData","listData","dateCellRender","item","getMonthData","month","monthCellRender","num","Login","e","initialvalues","LoginPage","formType","LoginForm","DashboardManager","DashboardStaff","TicketingDetail","loadTicketContent","getItem","ticketDetail","ticket_detail","ticketComments","comments","reloadTicketDetail","listDataTemp","avatar","size","backgroundColor","user_name","toUpperCase","body","postComment","put","params","comment","addComment","currentComment","itemLayout","pagination","page","pageSize","renderItem","Meta","ticket_status","Home","App","basename","exact","path","DashboardResident","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8cee26b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\n\r\nclass Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"nav\">\r\n                <a href = \"#dashboard\" className = \"left-nav\">Dashboard</a>\r\n                <a href = \"#ticket\" className = \"left-nav\">Ticket</a>\r\n                <a href = \"#chat\" className = \"left-nav\">Chat</a>\r\n                <a href = \"#logout\" className = \"right-nav\">Logout</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return(\r\n            <div className = \"footer\">\r\n                &copy; community management app\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Input } from 'antd';\r\n\r\nclass Blank extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            value: ''\r\n        };\r\n    \r\n    }\r\n\r\n    sendData = (event) => {\r\n        this.props.parentCallback(event.target.value,this.props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"blank\">\r\n                <p>{this.props.text}</p>\r\n                <Input placeholder={this.props.text} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blank;","import React, { Component } from 'react';\r\n\r\nclass DropDown extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            value: ''\r\n        };\r\n    \r\n    }\r\n\r\n    //handleChange(event) {\r\n    //    this.setState({value: event.target.value});\r\n    //}\r\n\r\n    sendData = (event) => {\r\n        console.log(event.target.value);\r\n        this.props.parentCallback(event.target.value,this.props);\r\n    }\r\n\r\n    render() {\r\n        const elements = this.props.elements;\r\n\r\n        const items = [];\r\n\r\n        for (const [index, value] of elements.entries()) {\r\n            items.push(<option key={index}>{value}</option>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"DropDown\">\r\n                <p>{this.props.description}</p>\r\n                <select className=\"DropDownSelect\" onChange={this.sendData}>\r\n                    <option value=\"\" selected disabled hidden>Choose one</option>\r\n                    {items}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;","export default function ajax(method, url, data, successCallback, errorCallback) {\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    xhr.open(method, url, true);\r\n\r\n    xhr.onload = function() {\r\n      if (xhr.status === 200) {\r\n        successCallback(xhr.responseText);\r\n      } else {\r\n        errorCallback();\r\n      }\r\n    };\r\n\r\n    xhr.onerror = function() {\r\n      console.error(\"The request couldn't be completed.\");\r\n      errorCallback();\r\n    };\r\n\r\n    if (data === null) {\r\n      xhr.send();\r\n    } else {\r\n      xhr.setRequestHeader(\"Content-Type\",\r\n        \"application/json;charset=utf-8\");\r\n      xhr.send(data);\r\n    }\r\n  }","import React, {Component} from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport {Table} from 'antd';\r\nimport {Button} from 'antd';\r\nimport {Space} from 'antd';\r\nimport Blank from '../components/Blank';\r\nimport DropDown from \"../components/DropDown\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Ajax from '../components/AJAX'\r\n\r\n\r\nclass TicketingManager extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            allTicketsTag: ['tk1','tk2'],    // set initial state with one div\r\n            allTicketsContent: [{\r\n                \"ticket_id\":\"0001233\",\r\n                \"unit_number\": '711',\r\n                \"subject\": \"water leak\",\r\n                \"submitted_date\": \"2020-09-18T14:48:00\",\r\n                \"issue\": \"water\",\r\n                \"recommend_staff\": []\r\n            },\r\n            {\r\n                \"ticket_id\":\"0032134\",\r\n                \"unit_number\": '711',\r\n                \"subject\": \"bear sleeping on sofa\",\r\n                \"submitted_date\": \"2020-09-11T14:48:00\",\r\n                \"issue\": \"misc\",\r\n                \"recommend_staff\": []                \r\n            },\r\n            ],\r\n           ticketSubmitMessage:\"\",\r\n           unit:'',\r\n           lastName:'',\r\n           firstName:'',\r\n           contact_method:'',\r\n           location:'',\r\n           category:'',\r\n           priorty:'',\r\n           subject:'',\r\n           description:'',\r\n           assignment:[],\r\n           datasource:[],\r\n           recommend_staff:[\"engineer1\",\"engineer2\"],\r\n           assignee:[\"engineer1\"],\r\n           possible_issue_categories:{\r\n             \"kitchen\": [\"sink\", \"dishwasher\"], \r\n             \"bathroom\": [\"sink\", \"furniture\",\"floor\"],\r\n             \"toilet\":[\"sink\",\"bathtub\",\"clog\"],\r\n             \"yard maintaince\": ['pool','yard'],\r\n             \"water\":[\"pipe explode\",\"pipe clog\",\"pipe freeze\"],\r\n             \"pest control\":[\"kitchen\",\"bedroom\",\"toliet\",\"living room\",\"patio\",\"storage\",\"basement\"],\r\n             \"locksmith\":[],\r\n             \"trash\":[],\r\n             \"misc\":[]\r\n            },\r\n            possible_locs:[]\r\n          // possible_loc:['kitchen','water','flooring','painting','windows/doors','yard','pest control','locksmith','trash','yard/pool','misc'],\r\n         }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.refershTickets();\r\n        this.loadIssueCategory();\r\n    }\r\n\r\n    loadIssueCategory=()=>{\r\n      Ajax('GET', \"/communitymanagement/tickets/ticket-issue-categories\", [],\r\n          // successful callback\r\n          function(res) {\r\n            let items = JSON.parse(res);\r\n            this.setState({possible_issue_categories:items})\r\n            console.log(\"good\");\r\n          },\r\n          // failed callback\r\n          function() {\r\n            console.log('fail');\r\n          }\r\n        );\r\n    }\r\n\r\n    // refersh page function \r\n    ReloadTickets = ()=>{\r\n      \r\n      let dsource=[];\r\n\r\n      this.state.allTicketsTag.map((cdiv, i) => {\r\n        \r\n        let all_assignees=this.state.allTicketsContent[i].recommend_staff;\r\n        let assigneeTag_1=\r\n        <div>\r\n          <Space direction=\"vertical\">\r\n            <DropDown iid={i} parentCallback = {this.AssignmentCallBack} elements={all_assignees}/>\r\n            <Button iid={i} onClick={(event)=>this.assignTickets(event,i)} shape=\"round\">Confirm</Button> \r\n          </Space>\r\n        </div>;  //(event)=>this.assignTickets(event,i): add a parameter i to callback\r\n  \r\n        //let assigneeTag_2=<div><Button iid={i} onClick={(event)=>this.cancelAssignment(event,i)} danger>Cancel Assignment</Button></div>;\r\n\r\n        //1. trim assignees by category (unfinished)\r\n        let cCategory=this.state.allTicketsContent[i].category;\r\n\r\n        //2.check if assignee exists for current ticket\r\n        let assigneeTag=[];\r\n        if (this.state.allTicketsContent[i].assignee){\r\n          console.log(this.state.allTicketsContent[i].assignee);\r\n          \r\n          let assigneeTag_2=<div>Assigned: {this.state.allTicketsContent[i].assignee} </div>;\r\n          \r\n          assigneeTag=assigneeTag_2;\r\n        }else{\r\n          assigneeTag=assigneeTag_1;\r\n        }\r\n\r\n        dsource.push({\r\n            key: i,\r\n            ticket_id: <Button href='/communitymanagement/TicketingDetail' onClick={this.TicketIdStore(this.state.allTicketsContent[i].ticket_id)} type=\"link\">{this.state.allTicketsContent[i].ticket_id}</Button>, \r\n            unit: this.state.allTicketsContent[i].unit_number, \r\n            subject: this.state.allTicketsContent[i].subject, \r\n            created: this.state.allTicketsContent[i].submitted_date, \r\n            category: this.state.allTicketsContent[i].issue, \r\n            priority: this.state.allTicketsContent[i].priority,\r\n            assignee: assigneeTag,\r\n        })\r\n      });\r\n      this.setState({datasource:dsource}); // it is suggested that try not to directly change state var as next setState may discard the change, use setsTATE instead\r\n      \r\n    }\r\n\r\n    TicketIdStore = (tid) =>{\r\n      sessionStorage.setItem('inquiredTicketID', 'tid');\r\n    }\r\n\r\n    // if need props, use this.props to access\r\n    HomeBlankCallBack = (childData,childProps) => {\r\n      this.setState({\r\n        unit: childData,\r\n      });\r\n      //console.log(childData);\r\n      \r\n    }\r\n    \r\n    FnameBlankCallBack = (childData,childProps) => {\r\n      this.setState({\r\n        firstName: childData,\r\n      })\r\n      //console.log(childData);\r\n      //console.log(this.state.unit);\r\n    }\r\n\r\n    LnameBlankCallBack = (childData,childProps) => {\r\n      this.setState({\r\n        lastName: childData,\r\n      })\r\n    }\r\n\r\n    contactDropDownCallBack = (childData,childProps) => {\r\n      this.setState({\r\n        contact_method: childData,\r\n      })\r\n    }\r\n\r\n    locationDropDownCallBack = (childData,childProps) => {\r\n      this.setState({\r\n        location: childData,\r\n      })\r\n    }\r\n\r\n    categoryDropDownCallBack = (childData,childProps) => {\r\n      let pos_locs=this.state.possible_issue_categories[childData];\r\n      this.setState({\r\n        category: childData,\r\n        possible_locs: pos_locs\r\n      })\r\n    }\r\n\r\n    priortyDropDownCallBack = (childData,childProps) => {\r\n      this.setState({\r\n        priorty: childData,\r\n      })\r\n    }\r\n\r\n    subjectBlankCallBack = (childData,childProps) => {\r\n      this.setState({\r\n        subject: childData,\r\n      })\r\n    }\r\n\r\n    DescriptionCallBack = (event) => {\r\n      this.setState({\r\n        description: event.target.value,\r\n      })\r\n    }\r\n\r\n    \r\n\r\n    SubmitTickets=()=>{\r\n        console.log(this.state.unit);\r\n        let today = new Date();\r\n        let time = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()+\"T\"+today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        let ticketData = {\r\n          \"ticket_id\": Math.random().toString(12).substring(2, 9) + Math.random().toString(12).substring(2, 9),\r\n          //\"user_id\": sessionStorage.user_id,\r\n          \"user_id\": '123',\r\n          \"firstName\": this.state.firstName,\r\n          \"lastName\":  this.state.lastName,\r\n          \"unit\":this.state.unit,\r\n          \"priority\": this.state.priorty,\r\n          \"subject\": this.state.subject,\r\n          \"location\": this.state.location,\r\n          \"issue_category_id\": 1,\r\n          \"description\": this.state.description,\r\n          \"category\": this.state.category,\r\n          \"created\": time,\r\n          \"availability\": \"\",\r\n          \"assignee\": \"\",\r\n          \"fix_date\":\"\",\r\n          \"ticket_status\":\"\",\r\n          \"contact_method\":this.state.contact_method,\r\n          \"status\":\"open\"\r\n        };\r\n        console.log(ticketData);\r\n        //fetchAPI to create ticket\r\n        Ajax('POST', \"/communitymanagement/tickets/submit\", ticketData,\r\n          // successful callback\r\n          function(res) {\r\n            console.log(\"good\");\r\n          },\r\n          // failed callback\r\n          function() {\r\n            console.log('fail');\r\n          }\r\n        );\r\n        \r\n        this.setState({ticketSubmitMessage:\"ticket \"+ticketData.ticket_id.toString()+\" has been submitted\"})\r\n        \r\n      }\r\n\r\n    refershTickets=()=>{\r\n        Ajax('GET', '/communitymanagement/tickets/manager', [],\r\n          // successful callback\r\n          function(res) {\r\n            let items = JSON.parse(res);\r\n            if (!items || items.length === 0) {\r\n              console.log('No tickets.');\r\n            } else {\r\n              \r\n              let ttags = [];\r\n            \r\n                //convert priorty for sorting\r\n              items.map((cdiv,i)=>{\r\n              if(items[i].priorty===\"high\"){\r\n                items[i].priortyidx=3;\r\n              }\r\n              if(items[i].priorty===\"medium\"){\r\n                items[i].priortyidx=2;\r\n              }\r\n              if(items[i].priorty===\"low\"){\r\n                items[i].priortyidx=1;\r\n              }\r\n  \r\n              ttags.push(i);\r\n            })\r\n  \r\n            this.setState({allticketsContent:items});\r\n            this.setState({allTicketsTag:ttags});\r\n            this.ReloadTickets();\r\n            }\r\n          },\r\n          // failed callback\r\n          function() {\r\n            console.log('Cannot load tickets.');\r\n          }\r\n        );\r\n        \r\n      }\r\n      \r\n    AssignmentCallBack = (childData,childProps) => {\r\n      let existingAssignments=this.state.assignment;\r\n      \r\n      let tiid=childProps.iid;\r\n      let asm=childData;\r\n      let obj={};\r\n      obj[tiid]=asm;\r\n      \r\n      if(existingAssignments.find(o=>Object.keys(o)==tiid)){\r\n        existingAssignments[existingAssignments.findIndex(o=>Object.keys(o)==tiid)]=obj; // change assignment\r\n      }else{\r\n        existingAssignments.push(obj);\r\n      }\r\n      this.setState(\r\n        {assignment:existingAssignments}\r\n      )\r\n    }\r\n\r\n    assignTickets=(event,i)=>{\r\n      console.log(this.state.assignment);\r\n      let obj=this.state.assignment.find(o=>Object.keys(o)==i);\r\n      let tid=this.state.allTicketsContent[i].ticket_id;\r\n\r\n      //if directly click confirm, set the first assignee\r\n      if(!obj){ \r\n        obj={i:this.state.recommend_staff[0]};\r\n      }\r\n\r\n      Ajax('PUT', \"/communitymanagement/tickets/\"+tid.toString()+\"/assignees\", obj[i],\r\n          // successful callback\r\n          function(res) {\r\n            console.log(\"good\");\r\n          },\r\n          // failed callback\r\n          function() {\r\n            console.log('fail');\r\n          }\r\n        );\r\n      this.refershTickets();\r\n\r\n        // test without backend communication\r\n      let items=this.state.allTicketsContent;\r\n      items[i].assignee=obj[i];\r\n      this.setState({allTicketsContent:items})\r\n      this.ReloadTickets();\r\n    }\r\n\r\n    // cancelAssignemnt=(event,i)=>{\r\n    //   this.state.allTicketsContent[event.target.iid].assignee=\"\";\r\n    //   this.state.allTicketsContent[event.target.iid].status=\"open\";\r\n    //   Ajax('POST', \"/tickets\", this.state.allTicketsContent[event.target.iid],\r\n    //       // successful callback\r\n    //       function(res) {\r\n    //         console.log(\"good\");\r\n    //       },\r\n    //       // failed callback\r\n    //       function() {\r\n    //         console.log('fail');\r\n    //       }\r\n    //     );\r\n    //     this.refershTickets();\r\n    // }\r\n\r\n    render() {\r\n      const columns=[{\r\n        title: 'Ticket ID',\r\n        dataIndex: 'ticket_id',\r\n        render: (text) => <a>{text}</a>,\r\n      },\r\n      {\r\n        title: 'Unit',\r\n        dataIndex: 'unit',\r\n      },\r\n      {\r\n        title: 'Subject',\r\n        dataIndex: 'subject',\r\n      },\r\n      {\r\n        title: 'Submitted time',\r\n        dataIndex: 'created',\r\n        sorter: (a, b) => Date.parse(a.created) - Date.parse(b.created),\r\n        sortDirections: ['descend', 'ascend'],\r\n      },\r\n      {\r\n        title: 'Category',\r\n        dataIndex: 'category',\r\n      },\r\n      {\r\n        title: 'Priority',\r\n        dataIndex: 'priority',\r\n        sorter: (a, b) => a.priortyidx - b.priortyidx,\r\n        sortDirections: ['descend', 'ascend'],\r\n      },    \r\n      {\r\n        title: 'Assign Staff',\r\n        dataIndex: 'assignee',\r\n      },  \r\n    ];\r\n      return(\r\n        <div>\r\n            <Navigation/>\r\n\r\n            <div class=\"managerWelcome\">\r\n                Welcome Manager\r\n            </div>\r\n            <Container fluid>\r\n              <Row>\r\n                <Col xs={4}>\r\n                  <h3> Submit a Work Order </h3>\r\n                  <div>\r\n                    <Space direction=\"vertical\">\r\n                      <Row class='TicketSubmitManager'>  \r\n                        <Col>\r\n                            <Blank text=\"Home\" parentCallback = {this.HomeBlankCallBack}/>\r\n                            <Blank text=\"First Name\" parentCallback = {this.FnameBlankCallBack}/>\r\n                            <Blank text=\"Last Name\" parentCallback = {this.LnameBlankCallBack}/>\r\n                            <p>Description</p>\r\n                            <input text=\"Description\" className = \"description-box\" onChange={this.DescriptionCallBack}></input>\r\n                            \r\n                        </Col>                  \r\n                        <Col>\r\n                            <Blank text=\"Ticket Title\" parentCallback = {this.subjectBlankCallBack}/>\r\n                            <DropDown elements={['phone','email']} description=\"Contact Method\" parentCallback = {this.contactDropDownCallBack}/>\r\n                            \r\n                            <DropDown elements={Object.keys(this.state.possible_issue_categories)} description=\"Category\" parentCallback = {this.categoryDropDownCallBack} />\r\n                            <DropDown elements={this.state.possible_locs} description=\"Location\" parentCallback = {this.locationDropDownCallBack} />\r\n                            <DropDown elements={[\"high\",'medium','low']} description=\"Priority\" parentCallback = {this.priortyDropDownCallBack} />\r\n                        \r\n                        </Col>    \r\n                      </Row>\r\n                      \r\n                      <Button onClick={this.SubmitTickets} type=\"primary\">Submit</Button>\r\n                      <div>{this.state.ticketSubmitMessage}</div>\r\n                    </Space>\r\n                  </div> \r\n                </Col>\r\n                \r\n                <Col>\r\n                  <h3> Existing Work Orders </h3>\r\n                  <Space direction=\"vertical\">\r\n                    <Button>Refersh Ticket</Button>\r\n                    <Table scroll={{y:400}} dataSource={this.state.datasource} columns={columns} />\r\n                  </Space>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            \r\n            <Footer/>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default TicketingManager;","import React, {Component} from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport {Table} from 'antd';\r\nimport {Button} from 'antd';\r\nimport {Space} from 'antd';\r\nimport {DatePicker} from 'antd';\r\nimport Ajax from '../components/AJAX'\r\n\r\nclass TicketingStaff extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            allTicketsTag: ['tk1','tk2','tk3'],    // set initial state with one div\r\n            allTicketsContent: [{\r\n                \"ticket_id\":\"0001233\",\r\n                \"unit\": '711',\r\n                \"subject\": \"water leak\",\r\n                \"created\": \"2020-09-18T14:48:00\",\r\n                \"category\": \"water\",\r\n                \"priority\": \"high\",\r\n                \"fix_date\":\"09/09/2021\",\r\n                \"status\":\"in progress\"\r\n            },\r\n            {\r\n                \"ticket_id\":\"0032134\",\r\n                \"unit\": '711',\r\n                \"subject\": \"bear sleeping on sofa\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"misc\",\r\n                \"priority\": \"medium\",  \r\n                \"fix_date\":\"\",\r\n                \"status\":\"assigned\"              \r\n            },\r\n            {\r\n                \"ticket_id\":\"0123435\",\r\n                \"unit\": '711',\r\n                \"subject\": \"sink clog\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"sink\",\r\n                \"priority\": \"medium\",  \r\n                \"fix_date\":\"\",\r\n                \"status\":\"assigned\"                \r\n            }\r\n          ],\r\n          fix_date:[],\r\n          datasource:[]\r\n       }\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.reloadTickets();\r\n    }\r\n\r\n    reloadTickets=()=>{\r\n            \r\n      let dsource=[];\r\n\r\n      this.state.allTicketsTag.map((cdiv, i) => {\r\n     \r\n        let acceptDeclineTagContent=[];\r\n      \r\n        let acceptDeclineTagContent_1=\r\n        <div>\r\n          <Button iid={i} onClick={(event)=>this.acceptTicket(event,i)}>Accept</Button>\r\n          <Button iid={i} onClick={(event)=>this.declineTicket(event,i)}>Decline</Button>\r\n        </div>;\r\n        \r\n        let acceptDeclineTagContent_2=\r\n        <div>\r\n          <Space direction=\"vertical\">\r\n            <DatePicker iid={i} onChange={(date, dateString) => this.pushFixDate(date, dateString, i)}>select fix date</DatePicker>\r\n            <div>\r\n              <Button iid={i} onClick={(event)=>this.confirmTickets(event,i)}>Confirm</Button>\r\n              <Button iid={i} onClick={(event)=>this.BacktoAcceptDecline(event,i)}>Back</Button>\r\n            </div>\r\n          </Space>\r\n        </div>;\r\n        \r\n        let acceptDeclineTagContent_3=<Button iid={i} type=\"primary\">Complete</Button>\r\n\r\n        console.log(this.state.allTicketsContent[i].status);\r\n        if(this.state.allTicketsContent[i].status===\"INPROGRESS\"){\r\n          if(this.state.allTicketsContent[i].fix_date){ // ticket status: in progress, fixdate provided, indicate staff is on their way\r\n            acceptDeclineTagContent=acceptDeclineTagContent_3;\r\n          }else{// ticket status: in progress, no fix date, staff is considering their fixdate\r\n            acceptDeclineTagContent=acceptDeclineTagContent_2;\r\n          }\r\n          \r\n        }else{ // ticket status: assigned, staff has not accept the ticket assigned to them\r\n          acceptDeclineTagContent=acceptDeclineTagContent_1;\r\n        }\r\n\r\n        dsource.push({\r\n            key: i,\r\n            ticket_id: <Button href=\"/communitymanagement/TicketingDetail\" onClick={this.TicketIdStore(this.state.allTicketsContent[i].ticket_id)} type=\"link\">{this.state.allTicketsContent[i].ticket_id}</Button>, \r\n            unit: this.state.allTicketsContent[i].unit, \r\n            subject: this.state.allTicketsContent[i].subject, \r\n            created: this.state.allTicketsContent[i].created, \r\n            category: this.state.allTicketsContent[i].category, \r\n            priority: this.state.allTicketsContent[i].priority,\r\n            acceptDecline: acceptDeclineTagContent\r\n        })\r\n    });\r\n    this.setState({datasource:dsource});\r\n  }\r\n    \r\n  TicketIdStore = (tid) =>{\r\n      sessionStorage.setItem('inquiredTicketID', 'tid');\r\n    }\r\n\r\n    refershTickets=()=>{\r\n      Ajax('GET', '/tickets/staff?'+sessionStorage.username, [],\r\n        // successful callback\r\n        function(res) {\r\n          let items = JSON.parse(res);\r\n          if (!items || items.length === 0) {\r\n            console.log('No tickets.');\r\n          } else {\r\n          let ttags = [];\r\n          \r\n            //convert priorty for sorting\r\n          items.map((cdiv,i)=>{\r\n            if(items[i].priorty===\"high\"){\r\n              items[i].priortyidx=3;\r\n            }\r\n            if(items[i].priorty===\"medium\"){\r\n              items[i].priortyidx=2;\r\n            }\r\n            if(items[i].priorty===\"low\"){\r\n              items[i].priortyidx=1;\r\n            }\r\n\r\n            ttags.push(i);\r\n          })\r\n\r\n          this.setState({allticketsContent:items});\r\n          this.setState({allTicketsTag:ttags});\r\n          this.reloadTickets();\r\n          }\r\n        },\r\n        // failed callback\r\n        function() {\r\n          console.log('Cannot load tickets.');\r\n        }\r\n      );\r\n      \r\n    }\r\n    \r\n    acceptTicket=(event,i)=>{\r\n      let dsource=this.state.allTicketsContent;\r\n      dsource[i].status=\"INPROGRESS\";\r\n\r\n      this.setState({allTicketsContent:dsource});\r\n      this.reloadTickets();\r\n    }\r\n\r\n    pushFixDate=(date, dateString,iid)=>{ \r\n      let obj={};\r\n      obj[iid]=dateString;\r\n      let existing_fix_date=this.state.fix_date;\r\n      existing_fix_date.push(obj);\r\n      this.setState({fix_date:existing_fix_date});\r\n    }\r\n\r\n    BacktoAcceptDecline=(event,i)=>{\r\n      let dsource=this.state.allTicketsContent;\r\n      dsource[i].status=\"assigned\";\r\n\r\n      this.setState({allTicketsContent:dsource});\r\n      this.reloadTickets();\r\n    }\r\n\r\n    confirmTickets=(event,i)=>{\r\n      let obj=this.state.fix_date.find(o=>Object.keys(o)==i);\r\n      \r\n      Ajax(\"POST\",\"/tickets/\"+sessionStorage.username+\"/staff-action\", {\"action\":\"accept\"},\r\n          // successful callback\r\n          function(res) {\r\n            console.log(\"good\");\r\n          },\r\n          // failed callback\r\n          function() {\r\n            console.log('fail');\r\n          }\r\n        );\r\n      Ajax('PUT', \"/tickets/\"+sessionStorage.username+\"/staff-update\", {\"fix_date\":obj[i]},\r\n          // successful callback\r\n          function(res) {\r\n            console.log(\"good\");\r\n          },\r\n          // failed callback\r\n          function() {\r\n            console.log('fail');\r\n          }\r\n        );\r\n      \r\n      let existingTicketContent=this.state.allTicketsContent;\r\n      existingTicketContent[i].status=\"in progress\";\r\n      existingTicketContent[i].fix_date=obj[i];\r\n      this.setState({allTicketsContent:existingTicketContent});\r\n      this.reloadTickets();\r\n    }\r\n\r\n    declineTicket=()=>{\r\n      \r\n    }\r\n    \r\n    render() {\r\n        console.log(this.state.datasource);\r\n        const columns=[{\r\n          title: 'Ticket ID',\r\n          dataIndex: 'ticket_id',\r\n          render: (text) => <a>{text}</a>,\r\n        },\r\n        {\r\n          title: 'Unit',\r\n          dataIndex: 'unit',\r\n        },\r\n        {\r\n          title: 'Subject',\r\n          dataIndex: 'subject',\r\n        },\r\n        {\r\n          title: 'Submitted time',\r\n          dataIndex: 'created',\r\n          sorter: (a, b) => Date.parse(a.created) - Date.parse(b.created),\r\n          sortDirections: ['descend', 'ascend'],\r\n        },\r\n        {\r\n          title: 'Category',\r\n          dataIndex: 'category',\r\n        },\r\n        {\r\n          title: 'Priority',\r\n          dataIndex: 'priority',\r\n          sorter: (a, b) => a.priortyidx - b.priortyidx,\r\n          sortDirections: ['descend', 'ascend'],\r\n        },    \r\n        {\r\n          title: 'To Do',\r\n          dataIndex: 'acceptDecline',\r\n        },      \r\n      ];\r\n        return(\r\n            <div>\r\n                <Navigation/>\r\n\r\n                <div class=\"managerWelcome\">\r\n                    Welcome Staff\r\n                </div>\r\n                <h3> Your Orders </h3>\r\n                <Space direction=\"vertical\">\r\n                  <Button>Refersh Ticket</Button>\r\n                  <Table scroll={{y:500}} dataSource={this.state.datasource} columns={columns} />\r\n                </Space>\r\n                \r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketingStaff;","import React, {Component} from 'react';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        return (\r\n        <button className={ `btn ${this.props.className}`} >{this.props.content}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport Blank from '../components/Blank';\r\nimport DropDown from \"../components/DropDown\";\r\nimport Button from \"../components/Button\";\r\nimport { Table, Input, Dropdown } from 'antd';\r\n\r\nclass TicketingResident extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            allTicketsTag: ['tk1', 'tk2', 'tk3', 'tk4'],\r\n            allTicketsContent: [{\r\n                \"ticket_id\": \"0001233\",\r\n                \"unit\": '711',\r\n                \"subject\": \"water leak\",\r\n                \"created\": \"2020-09-18T14:48:00\",\r\n                \"category\": \"water\",\r\n                \"priority\": \"high\",\r\n                \"status\": \"open\",\r\n                \"review\": <Button className=\"ticket-history-btn\" content=\"comment\" />\r\n            },\r\n            {\r\n                \"ticket_id\": \"0032134\",\r\n                \"unit\": '711',\r\n                \"subject\": \"bear sleeping on sofa\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"misc\",\r\n                \"priority\": \"medium\",\r\n                \"status\": \"assigned\",\r\n                \"review\": <Button className=\"ticket-history-btn\" content=\"comment\" />\r\n            },\r\n            {\r\n                \"ticket_id\": \"0123435\",\r\n                \"unit\": '711',\r\n                \"subject\": \"sink clog\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"sink\",\r\n                \"priority\": \"medium\",\r\n                \"status\": \"completed\",\r\n                \"review\": <Button className=\"ticket-history-btn\" content=\"review\" />\r\n            },\r\n            {\r\n                \"ticket_id\": \"0001394218\",\r\n                \"unit\": '900',\r\n                \"subject\": \"kitchen\",\r\n                \"created\": \"2020-09-18T14:48:00\",\r\n                \"category\": \"water\",\r\n                \"priority\": \"high\",\r\n                \"status\": \"completed\",\r\n                \"review\": <Button className=\"ticket-history-btn\" content=\"review\" />\r\n            },\r\n            ],\r\n        }\r\n    }\r\n    render() {\r\n        const { TextArea } = Input;\r\n        const location = [\"--None--\", \"Balcony/Patio\", \"Dining Room\", \"Elevator\", \"Exterior\",\r\n            \"Hallway\", \"Kitchen\", \"Laundry Room\", \"Living Room\", \"Master Bathroom\",\r\n            \"Master Bedroom\", \"Other Bathroom\", \"Other Bedroom\", \"Stairs\", \"Unit Wide\", \"Utility Closet\"];\r\n        const category = [\"--None--\", \"Appliance\", \"Electrical\", \"Exterior\", \"HVAC\", \"Interior\",\r\n            \"Locks/Keys\", \"Plumbing\"];\r\n        const contact = [\"--None--\", \"phone\", \"email\"];\r\n\r\n        let datasource = [];\r\n        let columns = [{\r\n            title: 'Ticket ID',\r\n            dataIndex: 'ticket_id',\r\n            render: (text) => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Subject',\r\n            dataIndex: 'subject',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n        },\r\n        {\r\n            title: 'Priority',\r\n            dataIndex: 'priority',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n        },\r\n        {\r\n            title: 'Comment/Review',\r\n            dataIndex: 'review',\r\n        },\r\n        ];\r\n\r\n        this.state.allTicketsTag.map((cdiv, i) => {\r\n            datasource.push({\r\n                key: i,\r\n                ticket_id: <a href=''>{this.state.allTicketsContent[i].ticket_id}</a>,\r\n                unit: this.state.allTicketsContent[i].unit,\r\n                subject: this.state.allTicketsContent[i].subject,\r\n                created: this.state.allTicketsContent[i].created,\r\n                category: this.state.allTicketsContent[i].category,\r\n                priority: this.state.allTicketsContent[i].priority,\r\n                status: this.state.allTicketsContent[i].status,\r\n                review: this.state.allTicketsContent[i].review,\r\n            })\r\n        });\r\n\r\n        return (\r\n            <div className=\"ticketing-resident\">\r\n                <Navigation />\r\n                <div className=\"main\">\r\n                    <div className = \"dashboard-main\">\r\n                        <h2> SUBMIT A WORK ORDER </h2>\r\n                        <h5>Contact Info</h5>\r\n                        <Blank text=\"Home\" />\r\n                        <Blank text=\"First Name\" />\r\n                        <Blank text=\"Last Name\" />\r\n                        <Blank text=\"Email\" />\r\n                        <Blank text=\"Phone\" />\r\n                        <DropDown elements={contact} description=\"Preferred Contact Method\" />\r\n                        <h5 className = \"ticketing-subtitle\" >Issue Description</h5>\r\n                        <DropDown elements={location} description=\"Location\" />\r\n                        <DropDown elements={category} description=\"Category\" />\r\n                        <p>Description</p>\r\n                        <TextArea rows={4} />\r\n                        <div className=\"buttons\">\r\n                            <Button className=\"ticket-btn\" content=\"submit\" />\r\n                            <Button className=\"ticket-btn\" content=\"cancel\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"dashboard-main\">\r\n                        <div className=\"work-order maintenance-history\">\r\n                            <h5>Maintenance History</h5>\r\n                            <Table dataSource={datasource} columns={columns} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketingResident;","\r\nimport React, { Component } from 'react';\r\nimport { Input, DatePicker,Tooltip,Form } from 'antd';\r\nimport {InfoCircleOutlined,FieldNumberOutlined,UserOutlined} from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nclass ResidentSignUp extends Component {\r\n    onChange = (param)=>{\r\n        // console.log(moment(param).format(\"YYYY/MM/DD\"));\r\n        // alert(moment(param).format(\"YYYY-MM-DD\"));\r\n       moment(param).format(\"YYYY-MM-DD\");\r\n     \r\n    }\r\n    \r\n    render() {\r\n        const dateFormat = 'YYYY-MM-DD';\r\n\r\n        return (\r\n            <div className=\"additionalInfo\">\r\n                    {/* <h1>This is RESIDENT additional components</h1> */}\r\n                   <Form.Item\r\n                         label =\"Unit Number \" \r\n                         name=\"unit_num\"\r\n                         rules={[{ required: true, message: 'Please input your Unit Number!' }]}\r\n                    >\r\n                                   \r\n                       <Input prefix={<FieldNumberOutlined className=\"site-form-item-icon\" />}  placeholder=\"Unit Number\" />\r\n                    </Form.Item>\r\n                    \r\n                    <Form.Item\r\n                         label =\"Birth Date \" \r\n                         name=\"birthday\"\r\n                         rules={[{ required: true, message: 'Please select your birth date!' }]}\r\n                    >\r\n                         <DatePicker placeholder = \"birth date\" format = {dateFormat} onChange={this.onChange} style={{ width: '100%' }} />      \r\n    \r\n                    </Form.Item>\r\n               \r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResidentSignUp;","\r\nimport React, { Component } from 'react';\r\nimport { Input, DatePicker,Tooltip,Form } from 'antd';\r\nimport {InfoCircleOutlined,FieldNumberOutlined,UserOutlined} from '@ant-design/icons';\r\nclass ManagerSignUp extends Component {\r\n   \r\n    render() {\r\n        return (\r\n            <div className=\"additionalInfo\">\r\n                    {/* <h1>This is Manager additional components</h1> */}\r\n                   {/* <Form.Item\r\n                         label =\"Manager ID \" \r\n                         name=\"ManagerId\"\r\n                         rules={[{ required: true, message: 'Please input your Unit Number!' }]}\r\n                    >\r\n                                   \r\n                                <Input prefix={<FieldNumberOutlined className=\"site-form-item-icon\" />}  placeholder=\"Unit Number\" />\r\n                    </Form.Item> */}\r\n                    \r\n                \r\n               \r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ManagerSignUp;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Input, DatePicker,Tooltip,Form,Select } from 'antd';\r\nimport {InfoCircleOutlined,FieldNumberOutlined,UserOutlined} from '@ant-design/icons';\r\n\r\n\r\nclass StaffSignUp extends Component {\r\n    \r\n    handleChange = (param)=>{\r\n       return param.key;\r\n    }\r\n\r\n    render() {\r\n        const { Option } = Select;\r\n       \r\n\r\n        return (\r\n            <div className=\"additionalInfo\">\r\n                  \r\n                   <Form.Item\r\n                         label =\"Category \" \r\n                         name=\"category\"\r\n                         rules={[{ required: true, message: 'Please select your category!' }]}\r\n                    >\r\n                    \r\n                    <Select\r\n                        labelInValue\r\n                        defaultValue={{ value: 'Maintenance Category' }}\r\n                        style={{ width: '100%' }}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <Option value=\"001\">Appliances</Option>\r\n                        <Option value=\"002\">Cable</Option>\r\n                        <Option value=\"003\">Water</Option>\r\n                        <Option value=\"004\">Electricity</Option>\r\n                        <Option value=\"005\">Floor</Option>\r\n                        <Option value=\"006\">Door</Option>\r\n                        \r\n                    </Select>\r\n                    </Form.Item>\r\n\r\n                    \r\n               \r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StaffSignUp;\r\n","//此为拦截器\r\nimport axios from \"axios\";\r\n\r\n//1.创建instance\r\nconst service = axios.create({\r\n    baseURL: '',\r\n    timeout: 5000,\r\n    \r\n  });\r\n\r\n  // 2. 添加请求拦截器\r\nservice.interceptors.request.use(function (config) {\r\n    // 在发送请求之前做些什么\r\n    return config;\r\n  }, function (error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n  });\r\n\r\n// 3. 添加响应拦截器\r\nservice.interceptors.response.use(function (response) {\r\n    // 对响应数据做点什么\r\n    return response;\r\n  }, function (error) {\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  export default service;","import React,{Component,Fragment} from \"react\";\r\n\r\nimport {Radio, Row, Col,Form, Input, Button, Checkbox } from 'antd';\r\n\r\nimport {MailOutlined,UserOutlined, LockOutlined,PhoneOutlined} from '@ant-design/icons';\r\nimport ResidentSignUp from './ResidentSignUp';\r\nimport ManagerSignUp from './ManagerSignUp';\r\nimport StaffSignUp from './StaffSignUp';\r\nimport {RegisterRequest} from './AccountAxios';\r\n\r\nclass RegisterForm extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state  = {\r\n        //    type: \"\",\r\n        };\r\n      \r\n    }\r\n   \r\n      onFinish = (values) => {\r\n        const personType = this.props.user_type;\r\n        // this.dataFromChild(this.props.formType);\r\n       RegisterRequest(values,personType).then(response =>{          \r\n            console.log(response);\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n        // console.log('Received values of form: ', values);\r\n      };\r\n\r\n    //    dataFromChild = (data)=>{\r\n    //     this.setState({\r\n    //         type: data,\r\n    //     })\r\n    //     console.log(this.state);\r\n    //    }\r\n     \r\n\r\n    render(){\r\n        \r\n        const {user_type} = this.props;\r\n       \r\n        \r\n        const result = () =>{\r\n            if(user_type === \"resident\"){\r\n               \r\n                return <ResidentSignUp/>;\r\n            }\r\n            else if(user_type === \"manager\"){\r\n              \r\n                return <ManagerSignUp/>;\r\n            }\r\n            else if (user_type === \"maintanence\") {\r\n               \r\n                return <StaffSignUp/>;\r\n            }\r\n        \r\n        }\r\n        return(\r\n                 <Fragment>\r\n                     <h4>Welcome to {this.props.user_type} portal!</h4>\r\n                     <br/>\r\n                     <br/>\r\n                    <div className = \"registerform-header\">\r\n                        {/* <p className = \"column\">Create a new account</p> */}\r\n                        \r\n                    </div>\r\n                     \r\n                    <div className = \"form-content\">\r\n\r\n                            <Form\r\n                                name=\"normal_login\"\r\n                                className=\"login-form\"\r\n                                initialValues={{ remember: true }}\r\n                                onFinish={this.onFinish}\r\n                            >\r\n                 \r\n                                <Form.Item\r\n                                    label =\"First Name: \" \r\n                                     name=\"first_name\"\r\n                                    rules={[{ required: true, message: 'Please input your First Name!' }]}\r\n                                >\r\n                                   \r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}  placeholder=\"First Name\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label =\"Last Name: \"\r\n                                     name=\"last_name\"\r\n                                    rules={[{ required: true, message: 'Please input your Last Name!' }]}\r\n                                >\r\n                                   \r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}  placeholder=\"Last Name\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                   label =\"Email:\"\r\n                                      name=\"username\"\r\n                                    rules={[{ required: true, message: 'Please input your Email address!' }]}\r\n                                >\r\n                                    \r\n                                <Input type = \"email\" prefix={<MailOutlined className=\"site-form-item-icon\" />}  placeholder=\"Email Address\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your password!',\r\n                                    },\r\n                                    ]}\r\n                                    hasFeedback\r\n                                >\r\n                                    <Input type = \"password\" prefix={<LockOutlined className=\"site-form-item-icon\" />}  placeholder=\"Paasowrd\"   />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"confirm\"\r\n                                    label=\"Confirm Password\"\r\n                                    dependencies={['password']}\r\n                                    hasFeedback\r\n                                    rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                        validator(rule, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n                                        return Promise.reject('The two passwords that you entered do not match!');\r\n                                        },\r\n                                    }),\r\n                                    ]}\r\n                                >\r\n                                    <Input type = \"password\" prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Confirm your paasowrd\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"phone_number\"\r\n                                    label=\"Phone Number\"\r\n                                    rules={[{ required: true, message: 'Please input your phone number!' }]}\r\n                                >\r\n                                    <Input prefix={<PhoneOutlined className=\"site-form-item-icon\" />}  style={{ width: '100%' }} \r\n                                    placeholder = \"Input your phone number\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>     \r\n                                \r\n                                {result()}\r\n                               \r\n                                </Form.Item>\r\n                                \r\n                                <Form.Item>\r\n                                   \r\n                              \r\n                                   \r\n                                    <a className=\"login-form-forgot\" href=\"\">\r\n                                    Forgot password\r\n                                    </a>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    \r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\r\n                                        Register\r\n                                    </Button>\r\n                                    \r\n                                </Form.Item>\r\n                            </Form>\r\n                    </div>\r\n                </Fragment>              \r\n           \r\n        )\r\n    }\r\n}\r\nexport default RegisterForm;\r\n","import service from './RequestInterceptor';\r\n\r\nexport function LoginRequest(data){\r\n    return service.request({  //返回给调用此方法的caller\r\n        url:\"/login/\",\r\n        method: \"post\",\r\n        data: data,\r\n       \r\n    })\r\n}\r\n\r\n// export function RegisterRequest(data){\r\n//     return service.request({  //返回给调用此方法的caller\r\n//         url:\"/register/\",\r\n//         method: \"post\",\r\n//         data: data,\r\n        \r\n//     })\r\n// }\r\n\r\nexport function RegisterRequest(data,type){\r\n    return service.request({  //返回给调用此方法的caller\r\n        url:\"/registration/\" + type,\r\n        method: \"post\",\r\n        data: data,\r\n        \r\n    })\r\n}","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport RegistrationForm from \"../components/RegistrationForm\";\r\n\r\n\r\nclass RegisterPage extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            user_type: \"resident\"\r\n        };\r\n    }\r\n   \r\n    getUserType() {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const myParam = urlParams.get('usertype');\r\n        return myParam;\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            \r\n            <div className=\"registerLogin\">\r\n                <Navigation />\r\n                <div className=\"main\">\r\n                \r\n                  <div className = \"registerPart\">\r\n\r\n                  <RegistrationForm user_type = {this.getUserType()}/>\r\n                    \r\n                  </div>\r\n                </div>\r\n            \r\n               <Footer/>\r\n               \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","import React, {Component} from 'react';\r\n\r\nclass WorkOrder extends Component {\r\n    render() {\r\n        return(\r\n            <div className = \"workorder\"> \r\n                <span>{this.props.id}</span>     \r\n                <span>{this.props.subject}</span>\r\n                <span>{this.props.priority}</span>  \r\n                <span>{this.props.description}</span>\r\n                <span>{this.props.status}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorkOrder;","import React, { Component } from 'react';\r\n\r\nclass News extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"news-item\">\r\n                <span className=\"subject\">{this.props.subject}</span>\r\n                <span className=\"date\">{this.props.date}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React, { Component } from 'react';\r\n\r\nclass ChatDashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"chat-item\">\r\n                <span className=\"sender\">{this.props.sender}</span>\r\n                <span className=\"message\">{this.props.message}</span>\r\n                <span className=\"date\">{this.props.date}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatDashboard;","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport Button from '../components/Button';\r\nimport WorkOrder from '../components/WorkOrder';\r\nimport { Table } from 'antd';\r\nimport News from \"../components/News\";\r\nimport ChatDashboard from '../components/ChatDashboard';\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            allTicketsTag: ['tk1', 'tk2', 'tk3'],\r\n            allTicketsContent: [{\r\n                \"ticket_id\": \"0001233\",\r\n                \"unit\": '711',\r\n                \"subject\": \"water leak\",\r\n                \"created\": \"2020-09-18T14:48:00\",\r\n                \"category\": \"water\",\r\n                \"priority\": \"high\",\r\n                \"status\": \"open\",\r\n                \"review\": <Button className=\"review-btn\" content=\"review\" />\r\n            },\r\n            {\r\n                \"ticket_id\": \"0032134\",\r\n                \"unit\": '711',\r\n                \"subject\": \"bear sleeping on sofa\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"misc\",\r\n                \"priority\": \"medium\",\r\n                \"status\": \"assigned\",\r\n                \"review\": <Button className=\"review-btn\" content=\"review\" />\r\n            },\r\n            {\r\n                \"ticket_id\": \"0123435\",\r\n                \"unit\": '711',\r\n                \"subject\": \"sink clog\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"sink\",\r\n                \"priority\": \"medium\",\r\n                \"status\": \"in progress\",\r\n                \"review\": <Button className=\"review-btn\" content=\"review\" />\r\n            }\r\n            ],\r\n            news: [{\r\n                \"subject\": \"news1\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news2\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news3\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news4\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news5\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            ],\r\n            messages: [{\r\n                \"sender\": \"manager\",\r\n                \"message\": \"your work order completed\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"sender\": \"manager\",\r\n                \"message\": \"your work order completed\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"sender\": \"manager\",\r\n                \"message\": \"your work order completed\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"sender\": \"manager\",\r\n                \"message\": \"your work order completed\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let ticketDivs = [];\r\n        this.state.allTicketsTag.map((cdiv, i) => {\r\n            ticketDivs.push(<WorkOrder\r\n                id={this.state.allTicketsContent[i].id}\r\n                unit={this.state.allTicketsContent[i].unit}\r\n                category={this.state.allTicketsContent[i].category}\r\n                description={this.state.allTicketsContent[i].description}\r\n                status={this.state.allTicketsContent[i].status}\r\n                key={cdiv}\r\n                id={cdiv}\r\n            />);\r\n        })\r\n\r\n        let newsDivs = [];\r\n        this.state.news.map((subject, i) => {\r\n            newsDivs.push(<News\r\n                subject={this.state.news[i].subject}\r\n                date={this.state.news[i].date}\r\n            />)\r\n        })\r\n\r\n        let messageDivs = [];\r\n        this.state.messages.map((date, i) => {\r\n            messageDivs.push(<ChatDashboard\r\n                sender={this.state.messages[i].sender}\r\n                message={this.state.messages[i].message}\r\n                date={this.state.messages[i].date}\r\n            />)\r\n        })\r\n\r\n        let datasource = [];\r\n        let columns = [{\r\n            title: 'Ticket ID',\r\n            dataIndex: 'ticket_id',\r\n            render: (text) => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Subject',\r\n            dataIndex: 'subject',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n        },\r\n        {\r\n            title: 'Priority',\r\n            dataIndex: 'priority',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n        },\r\n        ];\r\n\r\n\r\n        let completed = [{\r\n            title: 'Ticket ID',\r\n            dataIndex: 'ticket_id',\r\n            render: (text) => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Subject',\r\n            dataIndex: 'subject',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n        },\r\n        {\r\n            title: 'Priority',\r\n            dataIndex: 'priority',\r\n        },\r\n        {\r\n            title: 'Review',\r\n            dataIndex: 'review',\r\n        },\r\n        ];\r\n\r\n        this.state.allTicketsTag.map((cdiv, i) => {\r\n            datasource.push({\r\n                key: i,\r\n                ticket_id: <a href=''>{this.state.allTicketsContent[i].ticket_id}</a>,\r\n                unit: this.state.allTicketsContent[i].unit,\r\n                subject: this.state.allTicketsContent[i].subject,\r\n                created: this.state.allTicketsContent[i].created,\r\n                category: this.state.allTicketsContent[i].category,\r\n                priority: this.state.allTicketsContent[i].priority,\r\n                status: this.state.allTicketsContent[i].status,\r\n                review: this.state.allTicketsContent[i].review,\r\n            })\r\n        });\r\n\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <Navigation />\r\n                <div className=\"dashboard-main\">\r\n                    <div className=\"balance\">\r\n                        <div>Balance Due:</div>\r\n                        <h1>$0.00</h1>\r\n                        <Button className=\"center\" content=\"Make a Payment\" />\r\n                        <Button className=\"center\" content=\"Submit a Work Order\" />\r\n                    </div>\r\n                    <div className=\"chat-dashboard dashboard-item\">\r\n                        <h5 className=\"chat-title\">Messages</h5>\r\n                        {messageDivs}\r\n                        <Button className=\"chat-button\" content=\"Let's Chat\"></Button>\r\n                    </div>\r\n                    <div className=\"news dashboard-item\">\r\n                        <h5 className=\"news-title\">Community News</h5>\r\n                        {newsDivs}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dashboard-main\">\r\n                    <div className=\"work-order\">\r\n                        <h5>Existing Work Orders</h5>\r\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={columns} />\r\n                        <Button content=\"View Calendar\"></Button>\r\n                    </div>\r\n\r\n                    <div className=\"work-order\">\r\n                        <h5>Completed Work Orders</h5>\r\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={completed} />\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, {Component} from 'react';\r\n\r\nimport { Calendar } from 'antd';\r\n\r\nclass Calender extends Component{\r\n  constructor(){\r\n    super();\r\n}\r\n\r\n  getListData=(value)=> {\r\n    let listData;\r\n    switch (value.date()) {\r\n      case 8:\r\n        listData = [\r\n          { type: 'warning', content: 'This is warning event.' },\r\n          { type: 'normal', content: 'This is usual event.' },\r\n        ]; break;\r\n      case 10:\r\n        listData = [\r\n          { type: 'warning', content: 'This is warning event.' },\r\n          { type: 'normal', content: 'This is usual event.' },\r\n          { type: 'error', content: 'This is error event.' },\r\n        ]; break;\r\n      case 15:\r\n        listData = [\r\n          { type: 'warning', content: 'This is warning event' },\r\n          { type: 'normal', content: 'This is very long usual event。。....' },\r\n          { type: 'error', content: 'This is error event 1.' },\r\n          { type: 'error', content: 'This is error event 2.' },\r\n          { type: 'error', content: 'This is error event 3.' },\r\n          { type: 'error', content: 'This is error event 4.' },\r\n        ]; break;\r\n      default:\r\n    }\r\n    return listData || [];\r\n  }\r\n  \r\n  dateCellRender=(value)=> {\r\n    const listData = this.getListData(value);\r\n    return (\r\n      <ul className=\"events\">\r\n        {\r\n          listData.map(item => (\r\n            <li key={item.content}>\r\n              <span className={`event-${item.type}`}>●</span>\r\n              {item.content}\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n  \r\n  getMonthData=(value)=> {\r\n    if (value.month() === 8) {\r\n      return 1394;\r\n    }\r\n  }\r\n  \r\n  monthCellRender=(value)=> {\r\n    const num = this.getMonthData(value);\r\n    return num ? (\r\n      <div className=\"notes-month\">\r\n        <section>{num}</section>\r\n        <span>Backlog number</span>\r\n      </div>\r\n    ) : null;\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <Calendar dateCellRender={this.dateCellRender} monthCellRender={this.monthCellRender} />\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Calender;","import React,{Component,Fragment} from \"react\";\r\n import {Radio, Row, Col,Form, Input, Button, Checkbox } from 'antd';\r\n import { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n import {LoginRequest} from './AccountAxios';\r\n \r\n class Login extends Component{\r\n     constructor(){\r\n         super();\r\n         this.state  = {\r\n            //  value:0\r\n         };\r\n \r\n     }\r\n       onFinish = (values) => {\r\n        LoginRequest(values).then(response =>{\r\n               \r\n               console.log(response);\r\n           }).catch(error =>{\r\n                console.log(error);\r\n           })\r\n     \r\n       };\r\n \r\n       onChange = e => {\r\n         console.log('radio checked', e.target.value);\r\n         this.setState({\r\n           value: e.target.value,\r\n         });\r\n       };\r\n \r\n \r\n \r\n     render(){\r\n         return(\r\n                  <Fragment>\r\n                     <div className = \"form-header\">\r\n                         <p className = \"column\">Login</p>\r\n                     \r\n                     </div>\r\n                      \r\n                     <div className = \"form-content\">\r\n \r\n                             <Form\r\n                                 name=\"normal_login\"\r\n                                 className=\"login-form\"\r\n                                 initialvalues={{ remember: true }}\r\n                                 onFinish={this.onFinish}\r\n                                 >\r\n                               \r\n                                 <Form.Item\r\n                                      name=\"email\"\r\n                                     rules={[{ required: true, message: 'Please input your Email!' }]}\r\n                                 >\r\n                                      \r\n                                 <Input type = \"email\" prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\r\n                                 </Form.Item>\r\n \r\n                                 <Form.Item\r\n                                     name=\"password\"\r\n                                     rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                                 >\r\n                                 <Input  \r\n                                 prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                     type=\"password\" \r\n                                     placeholder=\"Password\"\r\n                                 />\r\n                                 </Form.Item>\r\n \r\n                                 \r\n                                 <Form.Item>\r\n                            \r\n                                     <a className=\"login-form-forgot\" href=\"\">\r\n                                     Forgot password\r\n                                     </a>\r\n                                 </Form.Item>\r\n \r\n                                 <Form.Item>\r\n                                     \r\n                                     <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\r\n                                     Log in\r\n                                     </Button>\r\n                                     \r\n                                 </Form.Item>\r\n                             </Form>\r\n                     </div>\r\n                 </Fragment>              \r\n            \r\n         )\r\n     }\r\n }\r\n export default Login;\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport RegistrationForm from \"../components/RegistrationForm\";\r\nimport LoginForm  from \"../components/LoginForm\";\r\n\r\nclass LoginPage extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            formType: \"Maintanence\"\r\n        };\r\n    }\r\n   \r\n\r\n    render() {\r\n        \r\n        return (\r\n            \r\n            <div className=\"registerLogin\">\r\n                <div className=\"main\">\r\n                  \r\n                  <div className = \"centerPart\">\r\n                  \r\n                  <LoginForm/>\r\n                  </div>\r\n\r\n                </div>\r\n               \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport Button from '../components/Button';\r\nimport WorkOrder from '../components/WorkOrder';\r\nimport { Table } from 'antd';\r\nimport News from \"../components/News\";\r\nimport ChatDashboard from '../components/ChatDashboard';\r\n\r\nclass DashboardManager extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            allTicketsTag: ['tk1', 'tk2', 'tk3'],\r\n            allTicketsContent: [{\r\n                \"ticket_id\": \"0001233\",\r\n                \"unit\": '711',\r\n                \"subject\": \"water leak\",\r\n                \"created\": \"2020-09-18T14:48:00\",\r\n                \"category\": \"water\",\r\n                \"priority\": \"high\",\r\n                \"status\": \"open\",\r\n                \"review\": <Button className=\"review-btn\" content=\"view\" />\r\n            },\r\n            {\r\n                \"ticket_id\": \"0032134\",\r\n                \"unit\": '711',\r\n                \"subject\": \"bear sleeping on sofa\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"misc\",\r\n                \"priority\": \"medium\",\r\n                \"status\": \"assigned\",\r\n                \"review\": <Button className=\"review-btn\" content=\"view\" />\r\n            },\r\n            {\r\n                \"ticket_id\": \"0123435\",\r\n                \"unit\": '711',\r\n                \"subject\": \"sink clog\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"sink\",\r\n                \"priority\": \"medium\",\r\n                \"status\": \"in progress\",\r\n                \"review\": <Button className=\"review-btn\" content=\"view\" />\r\n            }\r\n            ],\r\n            news: [{\r\n                \"subject\": \"news1\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news2\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news3\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news4\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news5\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            ],\r\n            messages: [{\r\n                \"sender\": \"unit 101\",\r\n                \"message\": \"noise complaint\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"sender\": \"unit 202\",\r\n                \"message\": \"review submitted\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"sender\": \"unit 303\",\r\n                \"message\": \"package missing\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"sender\": \"staff Ben\",\r\n                \"message\": \"order completed\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let ticketDivs = [];\r\n        this.state.allTicketsTag.map((cdiv, i) => {\r\n            ticketDivs.push(<WorkOrder\r\n                id={this.state.allTicketsContent[i].id}\r\n                unit={this.state.allTicketsContent[i].unit}\r\n                category={this.state.allTicketsContent[i].category}\r\n                description={this.state.allTicketsContent[i].description}\r\n                status={this.state.allTicketsContent[i].status}\r\n                key={cdiv}\r\n                id={cdiv}\r\n            />);\r\n        })\r\n\r\n        let newsDivs = [];\r\n        this.state.news.map((subject, i) => {\r\n            newsDivs.push(<News\r\n                subject={this.state.news[i].subject}\r\n                date={this.state.news[i].date}\r\n            />)\r\n        })\r\n\r\n        let messageDivs = [];\r\n        this.state.messages.map((date, i) => {\r\n            messageDivs.push(<ChatDashboard\r\n                sender={this.state.messages[i].sender}\r\n                message={this.state.messages[i].message}\r\n                date={this.state.messages[i].date}\r\n            />)\r\n        })\r\n\r\n        let datasource = [];\r\n        let columns = [{\r\n            title: 'Ticket ID',\r\n            dataIndex: 'ticket_id',\r\n            render: (text) => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Subject',\r\n            dataIndex: 'subject',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n        },\r\n        {\r\n            title: 'Priority',\r\n            dataIndex: 'priority',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n        },\r\n        ];\r\n\r\n\r\n        let completed = [{\r\n            title: 'Ticket ID',\r\n            dataIndex: 'ticket_id',\r\n            render: (text) => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Subject',\r\n            dataIndex: 'subject',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n        },\r\n        {\r\n            title: 'Priority',\r\n            dataIndex: 'priority',\r\n        },\r\n        {\r\n            title: 'Review',\r\n            dataIndex: 'review',\r\n        },\r\n        ];\r\n\r\n        this.state.allTicketsTag.map((cdiv, i) => {\r\n            datasource.push({\r\n                key: i,\r\n                ticket_id: <a href=''>{this.state.allTicketsContent[i].ticket_id}</a>,\r\n                unit: this.state.allTicketsContent[i].unit,\r\n                subject: this.state.allTicketsContent[i].subject,\r\n                created: this.state.allTicketsContent[i].created,\r\n                category: this.state.allTicketsContent[i].category,\r\n                priority: this.state.allTicketsContent[i].priority,\r\n                status: this.state.allTicketsContent[i].status,\r\n                review: this.state.allTicketsContent[i].review,\r\n            })\r\n        });\r\n\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <Navigation />\r\n                <div className=\"dashboard-main\">\r\n                    <div className=\"balance\">\r\n                        <Button className=\"center\" content=\"Manage All Payments\" />\r\n                        <Button className=\"center\" content=\"Manage All Work Orders\" />\r\n                    </div>\r\n                    <div className=\"chat-dashboard dashboard-item\">\r\n                        <h5 className=\"chat-title\">Messages</h5>\r\n                        {messageDivs}\r\n                        <Button className=\"chat-button\" content=\"Let's Chat\"></Button>\r\n                    </div>\r\n                    <div className=\"news dashboard-item\">\r\n                        <h5 className=\"news-title\">Community News</h5>\r\n                        {newsDivs}\r\n                        <Button className=\"chat-button\" content=\"Write a Notice\"></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dashboard-main\">\r\n                    <div className=\"work-order\">\r\n                        <h5>Existing Work Orders</h5>\r\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={columns} />\r\n                        <div>\r\n                            <Button content=\"Assign a Work Order\"></Button>\r\n                        </div>\r\n                        <div>\r\n                            <Button content=\"View Calendar\"></Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"work-order\">\r\n                        <h5>Completed Work Orders</h5>\r\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={completed} />\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardManager;","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport Button from '../components/Button';\r\nimport WorkOrder from '../components/WorkOrder';\r\nimport { Table } from 'antd';\r\nimport News from \"../components/News\";\r\nimport ChatDashboard from '../components/ChatDashboard';\r\n\r\nclass DashboardStaff extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            allTicketsTag: ['tk1', 'tk2', 'tk3'],\r\n            allTicketsContent: [{\r\n                \"ticket_id\": \"0001233\",\r\n                \"unit\": '711',\r\n                \"subject\": \"water leak\",\r\n                \"created\": \"2020-09-18T14:48:00\",\r\n                \"category\": \"water\",\r\n                \"priority\": \"high\",\r\n                \"status\": \"assigned\",\r\n                \"review\": <Button className=\"review-btn\" content=\"view\" />\r\n            },\r\n            {\r\n                \"ticket_id\": \"0032134\",\r\n                \"unit\": '711',\r\n                \"subject\": \"bear sleeping on sofa\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"misc\",\r\n                \"priority\": \"medium\",\r\n                \"status\": \"assigned\",\r\n                \"review\": <Button className=\"review-btn\" content=\"view\" />\r\n            },\r\n            {\r\n                \"ticket_id\": \"0123435\",\r\n                \"unit\": '711',\r\n                \"subject\": \"sink clog\",\r\n                \"created\": \"2020-09-11T14:48:00\",\r\n                \"category\": \"sink\",\r\n                \"priority\": \"medium\",\r\n                \"status\": \"assigned\",\r\n                \"review\": <Button className=\"review-btn\" content=\"view\" />\r\n            }\r\n            ],\r\n            news: [{\r\n                \"subject\": \"news1\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news2\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news3\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news4\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"subject\": \"news5\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            ],\r\n            messages: [{\r\n                \"sender\": \"unit 101\",\r\n                \"message\": \"noise complaint\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"sender\": \"unit 202\",\r\n                \"message\": \"review submitted\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"sender\": \"unit 303\",\r\n                \"message\": \"package missing\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },\r\n            {\r\n                \"sender\": \"staff Ben\",\r\n                \"message\": \"order completed\",\r\n                \"date\": \"mm/dd/yy\"\r\n            },]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let ticketDivs = [];\r\n        this.state.allTicketsTag.map((cdiv, i) => {\r\n            ticketDivs.push(<WorkOrder\r\n                id={this.state.allTicketsContent[i].id}\r\n                unit={this.state.allTicketsContent[i].unit}\r\n                category={this.state.allTicketsContent[i].category}\r\n                description={this.state.allTicketsContent[i].description}\r\n                status={this.state.allTicketsContent[i].status}\r\n                key={cdiv}\r\n                id={cdiv}\r\n            />);\r\n        })\r\n\r\n        let newsDivs = [];\r\n        this.state.news.map((subject, i) => {\r\n            newsDivs.push(<News\r\n                subject={this.state.news[i].subject}\r\n                date={this.state.news[i].date}\r\n            />)\r\n        })\r\n\r\n        let messageDivs = [];\r\n        this.state.messages.map((date, i) => {\r\n            messageDivs.push(<ChatDashboard\r\n                sender={this.state.messages[i].sender}\r\n                message={this.state.messages[i].message}\r\n                date={this.state.messages[i].date}\r\n            />)\r\n        })\r\n\r\n        let datasource = [];\r\n        let columns = [{\r\n            title: 'Ticket ID',\r\n            dataIndex: 'ticket_id',\r\n            render: (text) => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Subject',\r\n            dataIndex: 'subject',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n        },\r\n        {\r\n            title: 'Priority',\r\n            dataIndex: 'priority',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n        },\r\n        ];\r\n\r\n\r\n        let completed = [{\r\n            title: 'Ticket ID',\r\n            dataIndex: 'ticket_id',\r\n            render: (text) => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Subject',\r\n            dataIndex: 'subject',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n        },\r\n        {\r\n            title: 'Priority',\r\n            dataIndex: 'priority',\r\n        },\r\n        {\r\n            title: 'Review',\r\n            dataIndex: 'review',\r\n        },\r\n        ];\r\n\r\n        this.state.allTicketsTag.map((cdiv, i) => {\r\n            datasource.push({\r\n                key: i,\r\n                ticket_id: <a href=''>{this.state.allTicketsContent[i].ticket_id}</a>,\r\n                unit: this.state.allTicketsContent[i].unit,\r\n                subject: this.state.allTicketsContent[i].subject,\r\n                created: this.state.allTicketsContent[i].created,\r\n                category: this.state.allTicketsContent[i].category,\r\n                priority: this.state.allTicketsContent[i].priority,\r\n                status: this.state.allTicketsContent[i].status,\r\n                review: this.state.allTicketsContent[i].review,\r\n            })\r\n        });\r\n\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <Navigation />\r\n\r\n                <div className=\"dashboard-main\">\r\n                    <div className=\"work-order\">\r\n                        <h5>Assigned Work Orders</h5>\r\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={columns} />\r\n                        <div>\r\n                            <Button content=\"Manage Your Orders\"></Button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"work-order\">\r\n                        <h5>Completed Work Orders</h5>\r\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={completed} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dashboard-main\">\r\n                    <div className=\"work-order\">\r\n                        <h5> Work Order In Progress</h5>\r\n                        <Table scroll={{ y: 500 }} dataSource={datasource} columns={columns} />\r\n                        <div>\r\n                            <Button content=\"View Calendar\"></Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardStaff;","import React, {Component} from 'react';\r\nimport { List, Avatar, Space, Input, Button } from 'antd';\r\nimport Ajax from '../components/AJAX'\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport axios from 'axios'\r\n\r\nclass TicketingDetail extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            ticketDetail: { \"ticket_id\": \"1423124315\",\r\n                \"user_name\": \"daloias\",\r\n                \"assignee\": [\"Umisc co.\"],\r\n                \"subject\": \"bear sleeping on sofa\",\r\n                \"description\": \"I can see from the window that the bear is sleeping on my sofa and eat all the snacks around it! I'm so afraid to go inside now...\",\r\n                \"category\": \"misc\",\r\n                \"issue\": \"\",\r\n                \"ticket_status\":\"in progress\",\r\n                \"created\":\"09-19-2020T20:30:23\",\r\n                \"fix_date\":\"09-19-2020T21:30:23\",\r\n                \"priority\": \"high\"}\r\n,\r\n            ticketComments:[\r\n                {\r\n                    \"user_name\": \"Manager\",\r\n                    \"created\": [\"09-19-2020T20:40:23\"],\r\n                    \"body\": [\"Umisc co. will fix this issue\"],\r\n                },\r\n                {\r\n                \"user_name\": \"Umisc co.\",\r\n                \"created\": [\"09-19-2020T21:20:23\"],\r\n                \"body\": [\"We will be there after preperation\"],\r\n            }],\r\n            listData:[],\r\n            currentComment:[]\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.loadTicketContent();\r\n        this.reloadTicketDetail();\r\n    }\r\n    // if need props, use this.props to access\r\n    loadTicketContent = ()=>{\r\n        let tid=sessionStorage.getItem(\"inquiredTicketID\");\r\n        Ajax('GET', \"/tickets/\"+tid.toString(), [],\r\n        // successful callback\r\n            function(res) {\r\n                let item=JSON.parse(res);\r\n                this.setState({\r\n                    ticketDetail:item.ticket_detail,\r\n                    ticketComments:item.comments\r\n                })\r\n                console.log(\"good\");\r\n            },\r\n            // failed callback\r\n            function() {\r\n                console.log('fail');\r\n            }\r\n        ); \r\n    }\r\n\r\n    reloadTicketDetail = () =>{\r\n        let listDataTemp=[];\r\n        listDataTemp.push({\r\n            title: <h2>{this.state.ticketDetail.subject}</h2>,\r\n            avatar:<Avatar size=\"large\" style={{backgroundColor: '#87d068',}}>{this.state.ticketDetail.user_name[0].toUpperCase()}</Avatar>,\r\n            description:<div><Space direction='vertical'><p className=\"commentDescription\">{this.state.ticketDetail.description}</p></Space></div>\r\n        });\r\n        \r\n        this.state.ticketComments.map((cdiv, i) => {\r\n            listDataTemp.push({\r\n                title:<p className=\"commentTitle\">Re:{\" \"}{cdiv.user_name} created at {cdiv.created}</p>,\r\n                avatar:<Avatar size=\"large\" style={{backgroundColor: '#87d068',}}>{cdiv.user_name[0].toUpperCase()}</Avatar>,\r\n                description:<p className=\"commentDescription\">{cdiv.body}</p>\r\n            });\r\n        });\r\n        this.setState({listData:listDataTemp});\r\n    }\r\n\r\n    postComment = () =>{\r\n      \r\n      // just practice axios a little bit...\r\n      axios.put('/ticket'+sessionStorage.getItem(\"inquiredTicketID\")+'/update', {\r\n          params: {\r\n            comment: 12345\r\n          }\r\n        })\r\n        .then(function (response) {\r\n          console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n        \r\n        this.reloadTicketDetail();\r\n    }\r\n\r\n    addComment = (event) =>{\r\n        this.setState({currentComment:event.target.value});\r\n    }\r\n    render() {\r\n        const { TextArea } = Input;\r\n\r\n        return(\r\n            <div>\r\n                <Navigation/>\r\n                <div>\r\n                    <Container fluid>\r\n                        <Row>\r\n                        <Col xs={10}>\r\n                            <Space direction=\"vertical\">\r\n                                \r\n                                    <List\r\n                                        itemLayout=\"vertical\"\r\n                                        size=\"large\"\r\n                                        pagination={{\r\n                                        onChange: page => {\r\n                                            console.log(page);\r\n                                        },\r\n                                        pageSize: 4,\r\n                                        }}\r\n                                        dataSource={this.state.listData}\r\n                                        renderItem={item => (\r\n                                        <List.Item key={item.title}>\r\n                                        <List.Item.Meta avatar={item.avatar} title={item.title}/>\r\n                                            {item.description}\r\n                                        </List.Item>\r\n                                    )}\r\n                                    />\r\n\r\n                                    <div>\r\n                                        <TextArea rows={6} onChange={(event)=>this.addComment(event)}/>\r\n                                        <Button onClick={this.postComment}>Comment</Button>\r\n                                    </div>                            \r\n                                </Space>\r\n                            </Col>\r\n                            <Col xs={2}>\r\n                                <div className=\"ticketInfoArea\">\r\n                                <Space direction=\"vertical\">\r\n                                    <div>\r\n                                        <h3>Resident</h3>\r\n                                        <p>{this.state.ticketDetail.user_name}</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>Created</h3>\r\n                                        <p>{this.state.ticketDetail.created}</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>Assignee</h3>\r\n                                        <p>{this.state.ticketDetail.assignee}</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>Fix date</h3>\r\n                                        <p>{this.state.ticketDetail.fix_date}</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>Status</h3>\r\n                                        <p>{this.state.ticketDetail.ticket_status}</p>\r\n                                    </div>\r\n                                </Space>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n                \r\n                <Footer/>\r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default TicketingDetail;","import React, { Component } from 'react';\r\nimport Login from './Login';\r\nimport Footer from '../components/Footer';\r\nimport { Avatar } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"vertical-center\">\r\n                <h1 className=\"home-title\"> Welcome to WeLive Portal! </h1>\r\n                <Login />\r\n                <div>\r\n                    <p className=\"text-center\">New user? Register here:</p>\r\n                    <p className=\"text-center\">I am a:</p>\r\n                    <div className=\"avatar-registration-page\" >\r\n                        <a href=\"/register?usertype=resident\">\r\n                            <Avatar size={80}>\r\n                                Resident\r\n                        </Avatar>\r\n                        </a>\r\n                        <a href=\"/register?usertype=manager\">\r\n                            <Avatar size={80}>\r\n                                Manager\r\n                        </Avatar>\r\n                        </a>\r\n                        <a href=\"/register?usertype=technician\">\r\n                            <Avatar size={80}>\r\n                                Technician\r\n                        </Avatar>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport TicketingManager from './pages/TicketingManager'\r\nimport TicketingStaff from './pages/TicketingStaff'\r\nimport TicketingResident from './pages/TicketingResident'\r\nimport Registeration from './pages/Registration';\r\nimport DashboardResident from './pages/DashboardResident';\r\nimport Calender from './pages/Calender';\r\nimport Login from './pages/Login';\r\nimport DashboardManager from './pages/DashboardManager';\r\nimport DashboardStaff from './pages/DashboardStaff';\r\nimport TicketingDetail from './pages/TicketingDetail';\r\nimport Home from './pages/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={'/communitymanagement'}>\r\n      <Route exact path='/' render={() =>\r\n        <Home />\r\n      } />\r\n      <Route exact path='/TicketingResident' render={() =>\r\n        <TicketingResident />\r\n      } />\r\n      <Route exact path='/TicketingManager' render={() =>\r\n        <TicketingManager />\r\n      } />\r\n      <Route exact path='/TicketingStaff' render={() =>\r\n        <TicketingStaff />\r\n      } />\r\n      <Route exact path='/login' render={() =>\r\n        <Login />\r\n      } />\r\n      <Route exact path='/register' render={() =>\r\n        <Registeration />\r\n      } />\r\n\r\n\r\n      <Route exact path='/Calender' render={() =>\r\n        <Calender />\r\n      } />\r\n\r\n      <Route exact path='/DashboardResident' render={() =>\r\n        <DashboardResident />\r\n      } />\r\n\r\n      <Route exact path='/DashboardManager' render={() =>\r\n        <DashboardManager />\r\n      } />\r\n\r\n      <Route exact path='/DashboardStaff' render={() =>\r\n        <DashboardStaff />\r\n      } />\r\n\r\n      <Route exact path='/TicketingDetail' render={() =>\r\n        <TicketingDetail />\r\n      } />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}